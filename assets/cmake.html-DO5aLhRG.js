import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as t,b as o,a as i,e as h,f as s,w as l,r as k,o as A}from"./app-8wgnlyR1.js";const y={},u={class:"hint-container info"};function m(F,a){const d=k("RouteLink"),p=k("RepoLink"),r=k("Tabs");return A(),g("div",null,[a[10]||(a[10]=t(`<p>CMake（Cross-Platform Make）是一个跨平台的构建系统，它可以根据用户编写<code>CMakeLists.txt</code>文件生成适用于不同编译器和操作系统的构建文件。 如生成 Visual Studio 17 的 <code>.sln</code>、XCode 的 <code>.xcodeproj</code>、Ninja 的 <code>.ninja</code>、make 的 <code>Makefile</code>文件。 进而生成可执行文件、静态库、动态库等目标文件。</p><p>关键字：跨编译器、跨平台</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>关于cmake版本：</p><ul><li>在cmake的早期版本（2.xx）中是使用<code>directory-oriented</code>的方式来管理“属性”的传递性的。当你定义了一个属性，就意味着当前文件夹和子文件夹会使用这些属性。这使得你必须按照实际目录的方式来管理cmake的依赖关系。</li><li>在cmake的新版本（2015年左右，称“modern cmake”）中使用<code>target-oriented</code>的方式来管理“属性”的传递性。对属性的传递性做了抽象，剥离了与文件实际目录的耦合。</li></ul><p>本文不做说明则以新版本管理方式记录cmake的使用。 上述概念区别在后面有<a href="todo">章节</a>分析。</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.31.6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> suite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> maintained</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> supported</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Kitware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (kitware.com/cmake).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),o(" more "),a[11]||(a[11]=t('<p>文档：</p><ul><li>CMake菜谱（CMake Cookbook中文版） <a href="https://www.bookstack.cn/read/CMake-Cookbook/content-preface-preface-chinese.md" target="_blank" rel="noopener noreferrer">https://www.bookstack.cn/read/CMake-Cookbook/content-preface-preface-chinese.md</a></li><li>现代CMake教程 <a href="https://crossroadw.github.io/ModernCMake/" target="_blank" rel="noopener noreferrer">https://crossroadw.github.io/ModernCMake/</a></li><li>官方文档 <s><a href="https://cmake.org/cmake/help/latest/module/GNUInstallDirs.html" target="_blank" rel="noopener noreferrer">https://cmake.org/cmake/help/latest/module/GNUInstallDirs.html</a></s> （<a href="https://cmake.com.cn/cmake/help/latest/" target="_blank" rel="noopener noreferrer">CN</a>）</li></ul><h2 id="getting-start" tabindex="-1"><a class="header-anchor" href="#getting-start"><span>Getting Start</span></a></h2>',3)),i("div",u,[a[3]||(a[3]=i("p",{class:"hint-container-title"},"相关信息",-1)),i("p",null,[a[1]||(a[1]=s("前提：需要知道c/c++编译是怎么一回事。可以回看",-1)),h(d,{to:"/zh/dev-c-commonsense/gcc.html"},{default:l(()=>[...a[0]||(a[0]=[s("gcc",-1)])]),_:1}),a[2]||(a[2]=s("内容。",-1))])]),a[12]||(a[12]=i("p",null,[s("配置文件： "),i("code",null,"CMakeLists.txt")],-1)),a[13]||(a[13]=i("p",null,"代码仓：",-1)),h(p,{path:"/code/code/demo-c-base/demo-03-cmake/01-gettingstart/CmakeLists.txt"}),a[14]||(a[14]=i("p",null,"最简例子：",-1)),h(r,{id:"67",data:[{id:"生成Makefile"},{id:"CMake文件"},{id:"源文件"}]},{title0:l(({value:e,isActive:n})=>[...a[4]||(a[4]=[s("生成Makefile",-1)])]),title1:l(({value:e,isActive:n})=>[...a[5]||(a[5]=[s("CMake文件",-1)])]),title2:l(({value:e,isActive:n})=>[...a[6]||(a[6]=[s("源文件",-1)])]),tab0:l(({value:e,isActive:n})=>[...a[7]||(a[7]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 生成Makefile")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"$"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," cmake"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -S"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ."),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -B"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," The"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compiler"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," identification"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," is"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," GNU"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 15.2.1")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Detecting"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compiler"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ABI"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," info")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Detecting"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compiler"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ABI"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," info"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," failed")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Check"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," for"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," working"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compiler:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /usr/bin/c++")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Check"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," for"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," working"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compiler:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /usr/bin/c++"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," works")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Detecting"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compile"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," features")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Detecting"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," CXX"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," compile"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," features"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," done")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Configuring"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," done"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (1.9s)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Generating"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," done"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," (0.1s)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"--"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Build"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," files"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," have"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," been"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," written"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," to:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /home/vagrant/wk2")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 生成目标文件")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"$"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," cmake"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --build"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," File"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 'Makefile'"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," has"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," modification"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," time"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1.9"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," s"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," in"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," the"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," future")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake[1]:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," File"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 'CMakeFiles/Makefile2'"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," has"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," modification"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," time"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1.8"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," s"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," in"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," the"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," future")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake[2]:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," File"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 'CMakeFiles/hello.dir/build.make'"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," has"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," modification"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," time"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1.8"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," s"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," in"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," the"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," future")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake[2]:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Clock"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," skew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," detected."),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Your"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," may"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," be"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," incomplete.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake[2]:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," File"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," 'CMakeFiles/hello.dir/build.make'"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," has"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," modification"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," time"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 1.7"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," s"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," in"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," the"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," future")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[ 50%] Building CXX object CMakeFiles/hello.dir/hello.cc.o")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[100%] Linking CXX executable hello")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake[2]:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Clock"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," skew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," detected."),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Your"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," may"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," be"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," incomplete.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[100%] Built target hello")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake[1]:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Clock"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," skew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," detected."),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Your"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," may"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," be"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," incomplete.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"gmake:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," warning:"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Clock"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," skew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," detected."),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  Your"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," may"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," be"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," incomplete.")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab1:l(({value:e,isActive:n})=>[...a[8]||(a[8]=[i("div",{class:"language-txt line-numbers-mode","data-highlighter":"shiki","data-ext":"txt","data-title":"CMakeLists.txt",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",null,"# 最小要求CMake版本")]),s(`
`),i("span",{class:"line"},[i("span",null,"# cmake_minimum_required(VERSION major.minor[.patch])")]),s(`
`),i("span",{class:"line"},[i("span",null,"cmake_minimum_required(VERSION 3.10)")]),s(`
`),i("span",{class:"line"},[i("span")]),s(`
`),i("span",{class:"line"},[i("span",null,"# 项目信息")]),s(`
`),i("span",{class:"line"},[i("span",null,"# project(项目名")]),s(`
`),i("span",{class:"line"},[i("span",null,"#   [VERSION 版本号]")]),s(`
`),i("span",{class:"line"},[i("span",null,"#   [LANGUAGES 编程语言 ...] # 不填写，默认 LANGUAGES C CXX")]),s(`
`),i("span",{class:"line"},[i("span",null,"# )")]),s(`
`),i("span",{class:"line"},[i("span",null,"# tip： 该命令设置后，会设置如下变量。这些变量可以通过message打印。")]),s(`
`),i("span",{class:"line"},[i("span",null,"# PROJECT_NAME")]),s(`
`),i("span",{class:"line"},[i("span",null,"# PROJECT_SOURCE_DIR / <PROJECT_NAME>_SOURCE_DIR")]),s(`
`),i("span",{class:"line"},[i("span",null,"# PROJECT_BINARY_DIR / <PROJECT_NAME>_BINARY_DIR")]),s(`
`),i("span",{class:"line"},[i("span",null,"project(Helloworld VERSION 0.1 LANGUAGES CXX)")]),s(`
`),i("span",{class:"line"},[i("span")]),s(`
`),i("span",{class:"line"},[i("span",null,"# add_executable(目标名称 源文件1 [源文件2...])")]),s(`
`),i("span",{class:"line"},[i("span",null,"add_executable(helloworld hello.cpp)")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab2:l(({value:e,isActive:n})=>[...a[9]||(a[9]=[i("div",{class:"language-cpp line-numbers-mode","data-highlighter":"shiki","data-ext":"cpp","data-title":"cpp",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"#include"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," <iostream>")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," main"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"() {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  std::cout "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"<<"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "Hello, World!"'),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," <<"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," std::endl;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"  return"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),_:1}),a[15]||(a[15]=t(`<p>常用参数：</p><table><thead><tr><th>参数名</th><th>作用</th></tr></thead><tbody><tr><td><code>--target &lt;target&gt;</code></td><td>执行目标，如Makefile中的目标</td></tr><tr><td><code>--config &lt;profile&gt;</code></td><td>todo</td></tr></tbody></table><h2 id="常见指令" tabindex="-1"><a class="header-anchor" href="#常见指令"><span>常见指令</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>还未了解cmake的基础概念的话，请先移步<a href="#id-base-consensus">基础概念</a>。</p><p>这里只罗列常见指令及其含义，方便简单理解CMakeLists.txt在写什么。 具体写法（格式）不在这体现。</p></div><ul><li><p><code>-DCMAKE_VERBOSE_MAKEFILE=ON</code> —— 环境变量，打印详细日志</p></li><li><p><code>cmake</code> —— 构建脚本生成工具</p></li><li><p><code>cmake_minimum_required</code> —— 检查cmake版本，小于指定版本退出执行</p></li><li><p><code>project</code> —— 设置项目名，随后会生成相关变量供开发者使用</p></li><li><p><code>add_executable</code>/<code>add_library</code> —— 添加构建目标，指定可执行程序（exe/elf）或者库（lib/so/a）的名称、依赖文件</p></li><li><p><code>target_include_directories</code> —— 为目标添加头文件的查找路径</p></li><li><p><code>target_link_libraries</code> —— 为目标添加静态库/动态库的名称</p></li><li><p><code>target_compile_definitions</code> —— 为目标添加宏定义（e.g. <code>-D ENABLE_HTTPS=1</code>）</p></li><li><p><code>add_subdirectory</code> —— 将子目录中的CMakeLists.txt文件添加进来，参与构建脚本的生成</p></li><li><p><code>find_package</code> —— 查找第三方库</p></li><li><p><code>ctest</code> —— 测试用例执行工具</p></li><li><p><code>enable_testing</code> —— 开启测试</p></li><li><p><code>add_test</code> —— 添加测试用例命令</p></li><li><p><code>-B build</code> —— 指定生成文件位置</p></li><li><p><code>--build build</code> —— 运行编译脚本，生成可执行程序</p></li><li><p><code>--install build</code> —— 运行安装脚本，将可执行程序及其配置移动到指定位置</p></li><li><p><code>-L</code> —— （调试）列出变量名</p></li><li><p><code>-H</code> —— （调试）列出变量名解释</p></li></ul><h2 id="id-base-consensus" tabindex="-1"><a class="header-anchor" href="#id-base-consensus"><span>基础概念</span></a></h2><p>参考：</p><ul><li><a href="https://www.bilibili.com/video/BV1MXX3YQEia" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1MXX3YQEia</a></li></ul><h3 id="属性-properties" tabindex="-1"><a class="header-anchor" href="#属性-properties"><span>属性（Properties）</span></a></h3><p>参考：</p><ul><li>彻底弄懂cmake中的 INTEFACE 可见性/传递性 问题 <a href="https://chunleili.github.io/cmake/understanding-INTERFACE" target="_blank" rel="noopener noreferrer">https://chunleili.github.io/cmake/understanding-INTERFACE</a></li></ul><p>从 modern cmake(&gt;=3.0) 开始，使用的范式从 director-oriented 转换到了 target-oriented。 这其中最重要的有三个概念：</p><ol><li><strong>target</strong> —— 编译的目标，一般就三种： <ul><li>静态库: 使用<code>add_library()</code></li><li>动态库: 使用<code>add_library()</code> 指定SHARED关键字</li><li>可执行文件: 使用<code>add_executable()</code></li></ul></li><li><strong>properties</strong> —— “编译目标”的“属性” <ul><li>编译标志：使用 <code>target_compile_option</code><ul><li><code>COMPILE_DEFINITIONS</code></li></ul></li><li>预处理宏标志：使用 <code>target_compile_definitions</code><ul><li><code>COMPILE_OPTIONS</code></li></ul></li><li>头文件目录：使用 <code>target_include_directories</code><ul><li><code>INCLUDE_DIRECTORIES</code></li><li><code>SOURCES</code></li></ul></li><li>链接库：使用 <code>target_link_libraries</code><ul><li><code>LINK_LIBRARIES</code></li><li><code>INTERFACE_LINK_LIBRARIES</code></li><li><code>STATIC_LIBRARY_OPTIONS</code></li></ul></li><li>链接标志：使用 <code>target_link_options</code><ul><li><code>LINK_OPTIONS</code></li><li><code>STATIC_LIBRARY_FLAGS</code></li></ul></li></ul></li><li><strong>可见性</strong> —— “编译目标属性”的在不同“编译目标”之间的“传递性” <ul><li><p>PRIVATE = 依赖自己使用，但不向上传递 （实现：<code>INCLUDE_DIRECTORIES</code>）</p></li><li><p>PUBLIC = 依赖自己使用，且向上传递 （实现：<code>INCLUDE_DIRECTORIES</code> + 下游可见）</p></li><li><p>INTERFACE = 依赖自己不使用，但向上传递 （实现：<code>INTERFACE_INCLUDE_DIRECTORIES</code> + 下游可见）</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用Interface的例子：</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">add_library(Eigen INTERFACE)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Engine是header-only库，只有头文件和依赖关系，没有代码实现。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">target_sources(Eigen INTERFACE </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 由于自身没有代码实现，需要使用的依赖文件，但是需要将依赖向下传递，因此使用Interface可见性。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  FILE_SET HEADERS</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    BASE_DIRS src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    FILES src/eigen.h src/vector.h src/matrix.h</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">add_executable(exe1 exe1.cpp)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">target_link_libraries(exe1 Eigen)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>配置<code>target_include_directories</code>有骚操作</p></div></li></ul></li></ol><h3 id="变量-variables" tabindex="-1"><a class="header-anchor" href="#变量-variables"><span>变量（Variables）</span></a></h3><h4>普通变量</h4><p>命令：</p><ul><li>定义变量值 <ul><li><code>set(varName value... [PARENT_SCOPE])</code></li></ul></li><li>取消变量值 <ul><li><code>set(varName)</code> —— 注意：这种方式和<code>set(varName &quot;&quot;)</code>有区别，参考“<a href="#id-value-cache">缓存变量</a>”</li><li><code>unset(varName)</code></li></ul></li></ul><p>特点：</p><ul><li>所有变量值都是“字符窜”！</li><li>区分大小写</li></ul><p>规范：</p><ul><li>变量名建议只使用字母、数字、<code>_</code>、<code>-</code></li><li>不要用<code>CMAKE_</code>（cmake变量前缀）开头定义自己的变量</li></ul><p>数据类型： cmake中只有字符串一种数据类型，但是表现形式有字符串、数组两种。 其中数组是用<code>;</code>符号分割的字符串，本质上还是字符串。</p><table><thead><tr><th>数据类型</th><th>声明方式</th></tr></thead><tbody><tr><td>字符串</td><td><code>set(myVar hello)</code> <br> <code>set(myVar &quot;hello\\;world&quot;)</code></td></tr><tr><td>数组/列表</td><td><code>set(myVar hello world)</code> <br> <code>set(myVar hello;world)</code> <br> <code>set(myVar &quot;hello;world&quot;)</code></td></tr></tbody></table><p>变量打印：</p><ul><li><code>\${...}</code> —— 这种方式会递归解析内部变量名。 e.g. <code>message(&quot;myVar = \${myVar}&quot;)</code>、<code>set(myVar2 \${myVar}2)</code>、<code>message(hello \${myVar}) # hello xxx</code></li><li><code>[[...]]</code> —— 这种方式不会解析内部变量名。 e.g. <code>message([[myVar]])</code>、<code>message([=[myVar]=])</code>、<code>message([[hello \${myVar}]]) # &#39;hello \${myVar}&#39;</code></li></ul><h4>环境变量（Env Variable）</h4><p>只改变cmake文件内命令的环境变量，不会改变执行会话的环境变量</p><p>命令：</p><ul><li>定义环境变量 <ul><li><code>set(ENV{varName} value)</code> —— e.g. <code>set(ENV{PATH} &quot;$ENV{PATH}:/opt/myDir&quot;)</code></li></ul></li></ul><h4 id="id-value-cache">缓存变量（Cache Variable）</h4><p>缓存变量会存放在CMakeCache.txt文件中</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>对比普通变量和缓存变量：</p><ul><li>缓存变量优先级比较低。 如果同时定义了相同名称的普通变量、缓存变量，则使用普通变量。</li><li>缓存变量的清空需使用 <code>set(myVar &quot;&quot;)</code> 而非普通变量的 <code>unset(myVar)</code></li><li>作用域区别： <ul><li>缓存变量作用域是“全局”</li><li>普通变量作用域是“函数”或“子目录” （具体区别在<a href="#id-properties-scope">作用域</a>章节详细分析。）</li></ul></li></ul><p>规范：</p><p>应避免使用相同名称的普通变量和缓存变量。 可以通过命名规则加以区分： 如缓存变量可以使用全大写字母（e.g. <code>MY_CACHE_VARIABLE</code>）； 普通变量使用驼峰命名（e.g. <code>normalVariable</code>）</p></div><p>命令：</p><ul><li><p>定义缓存变量</p><ul><li>命令行声明</li></ul><p><code>cmake -D &quot;MY_VAR:STRING=hello world&quot; .</code></p><ul><li>文档内部声明</li></ul><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  varName</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  value...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  CACHE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  type </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 实际都是字符串，但在图形界面（cmake-gui）有区分：BOOL、FILEPATH、PATH、STRING、INTERNAL</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  &quot;helpstring&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  [FORCE] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 当false时，缓存中已有值，则新值不写入</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>e.g. <code>set(DEMO_IS_PARALLEL off CACHE BOOL &quot;Is using parallel algorithm&quot;)</code></p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>BOOL取值支持多种格式：</p><ul><li>真：true/yes/y/1 （及其大写）</li><li>假：false/no/n/0</li></ul><p>另外，BOOL类型支持<code>option(optVal helpString [初始值])</code>方式定义</p></div></li><li><p>删除缓存变量</p><ul><li>命令行声明</li></ul><p><code>cmake -U &quot;MY*&quot; .</code></p></li></ul><h3 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制"><span>流程控制</span></a></h3><div class="hint-container warning"><p class="hint-container-title">注意</p><p>需要注意的是BOOL值的判断：</p><ul><li>当取值为 1/非零数值/ON/YES/Y/TRUE （不区分大小写） 时，均判断为真</li><li>当取值为 0/OFF/NO/N/FALSE/IGNORE/NOTFOUND/<code>*-NOTFOUND</code>/<code>&quot;&quot;</code> （不区分大小写） 时，判断为假</li></ul><p>规范：</p><p>更值得注意的是：（历史问题）当判断条件为字符串或变量时，判断结果会不一样</p><ul><li>字符串 —— 不为<code>&quot;TRUE&quot;</code>均为假</li><li>变量值 —— 取值不为<code>FALSE</code>均为真</li></ul><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(v &quot;hello&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(v)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> is true&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># here，原因：变量值，非空</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&#39; is false&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># here，原因：字符串，非TRUE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应对这种问题，建议人为规定统一用哪种写法。</p></div><h4>if/elseif/else/endif</h4><p>略</p><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(expr)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elseif(expr2)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>option</h4><p>略</p><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">option(BUILD_MYLIB &quot;构建MyLib目标&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(BUILD_MYLIB)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  add_library(MyLib mylib.cpp) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># here if &quot;cmake . -DBUILD_MYLIB=on&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;忽略构建MyLib目标&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>foreach/IN/ITEMS/LISTS/ZIP_LISTS/RANGE</h4><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">foreach(&lt;loop_var&gt; &lt;items&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endforeach()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>e.g.</p><p>IN ITEMS</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># foreach(v IN ITEMS a b c)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">foreach(v a b c) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 简写</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endforeach()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打印：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:a</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:b</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IN LISTS</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(list1 2 4 6 8)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(list2 1 3 5 7)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">foreach(v IN LISTS list1 list2)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  message(&quot;v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endforeach()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IN ZIP_LISTS</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(list1 2 4 6 8)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(list2 1 3 5 7)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">foreach(v IN ZIP_LISTS list1 list2)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v_0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v_1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endforeach()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打印</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:(2,1)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:(4,3)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:(6,5)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># v:(8,7)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RANGE</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">foreach(v RANGE 1 8 2) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># start end step</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  message(&quot;v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endforeach()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>while</h4><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">while(&lt;condition&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endwhile()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>break/continue</h4><p>略</p><h4>关键字</h4><h5>AND/OR/NOT</h5><p>略</p><h5>比较运算符</h5><table><thead><tr><th>数值</th><th>字符串</th><th>版本号</th><th>路径</th></tr></thead><tbody><tr><td>LESS</td><td>STRLESS</td><td>VERSION_LESS</td><td> </td></tr><tr><td>GREATER</td><td>STRGREATER</td><td>VERSION_GREATER</td><td> </td></tr><tr><td>EQUAL</td><td>STREQUAL</td><td>VERSION_EQUAL</td><td>PATH_EQUAL</td></tr><tr><td>LESS_EQUAL</td><td>STRLESS_EQUAL</td><td>VERSION_LESS_EQUAL</td><td> </td></tr><tr><td>GREATER_EQUAL</td><td>STRGREATER_EQUAL</td><td>VERSION_GREATER_EQUAL</td><td> </td></tr><tr><td> </td><td>MATCHS</td><td> </td><td> </td></tr></tbody></table><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(&quot;/path//to/myfile&quot; PATH_EQUAL &quot;/path/to/myfile&quot;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # here，原因：路径相同</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(&quot;/path//to/myfile&quot; STREQUAL &quot;/path/to/myfile&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # here，原因：字符串内容不一样</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 正则</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(&quot;My phone number is 12345&quot; MATCHES &quot;My phone number is ([0-9]+)&quot;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 注意，匹配上可以用CMAKE_MATCH_&lt;N&gt;调用（作用域：当前分支）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;Phone</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_MATCH_1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出： Phone number:12345</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>文件操作</h5><ul><li>EXISTS</li><li>IS_DIRECTORY</li><li>IS_SYMLINK</li><li>IS_ABSOLUTE</li><li>IS_READABLE</li><li>IS_WRITABLE</li><li>IS_EXECUTABLE</li><li>IS_NEWER_THAN</li></ul><h5>存在性测试</h5><ul><li>COMMAND 是否可调用</li><li>POLICY 是否存在策略</li><li>TARGET 是否存在目标</li><li>TEST 是否存在测试</li><li>DEFINED 是否定义变量</li><li>IN_LIST 是否在列表中</li></ul><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(list1 a b c d e f g)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(a &quot;f&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if (a IN_LIST list1)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;a is in list1&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>预定义变量</h5><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(MSVC)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;build with MSVC&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elseif(MINGW)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;build with MINGW&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elseif(XCODE)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;build with XCODE&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">else()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;build with other compiler&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面语句常用于CMakeLists.txt文件开头</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_SOURCE_DIR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot; STREQUAL &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_BINARY_DIR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(FATAL_ERROR </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在打印提示信息后终止后面命令</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;错误：禁止源码内编译。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    请为构建文件创建一个单独的目录。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数-function" tabindex="-1"><a class="header-anchor" href="#函数-function"><span>函数（Function）</span></a></h3><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">function(function_name args...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # do something</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endfunction()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>命名参数、未命名参数</h4><p>关键字：</p><ul><li>ARGC 参数数量</li><li>ARGV 参数列表</li><li>ARGN 未命名参数列表</li><li>ARGV<code>&lt;N&gt;</code> 位置N上的参数值</li></ul><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">function(my_function1 a b)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">,b:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># a:1,b:2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARGC</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># argc:5</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARGV</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># argv:1;2;3;4;5</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;argv2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARGV2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># argv2:3</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;argn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARGN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># argn:3;4;5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endfunction()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">my_function1(1 2 3 4 5)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>关键字参数</h4><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">function(my_function2 targetName)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;targetName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">targetName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># targetName:myTarget</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # cmake_parse_arguments(</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #    &lt;prefix&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #    &lt;options:选项关键字列表&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #    &lt;one_value_keywords:单值关键字列表&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #    &lt;multi_value_keywords:多值关键字列表&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #    &lt;args&gt;...)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  cmake_parse_arguments(arg_myfunction2 &quot;USE_MYLIB&quot; &quot;MYLIB_PATH&quot; &quot;SOURCES;INCLUDES&quot; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ARGN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;USE_MYLIB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arg_myfunction2_USE_MYLIB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># USE_MYLIB:FALSE</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;MYLIB_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arg_myfunction2_MYLIB_PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MYLIB_PATH:/usr/local/lib</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;SOURCES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arg_myfunction2_SOURCES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># SOURCES:main.cpp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  message(&quot;INCLUDES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">arg_myfunction2_INCLUDES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;)     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># INCLUDES:include;include2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # &lt;prefix&gt;_UNPARSED_ARGUMENTS       # 未解析的关键字变量</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # &lt;prefix&gt;_KEYWORDS_MISSING_VALUES  # 调用时，未提供值的关键字变量</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endfunction()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">my_function2(myTarget</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  USE_MYLIB                   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 选项关键字（Option Keywords）：传入值则为TRUE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  MYLIB_PATH &quot;/usr/local/lib&quot; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 单值关键字：后面跟一个值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  SOURCES &quot;main.cpp&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  INCLUDES &quot;include&quot; &quot;include2&quot; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 多值关键字：后面跟多个值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>返回值</h4><p>有两种方式：</p><p>1、</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">function(my_function3 returnValue)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  set(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">returnValue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> &quot;hello world&quot; PARENT_SCOPE)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endfunction()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">my_function3(result)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message(&quot;result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">result</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># result:hello world2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">function(my_function4 returnValue)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  set(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">returnValue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> &quot;hello world2&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  return(PROPAGATE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">returnValue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endfunction()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">my_function4(result)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message(&quot;result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">result</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># result:hello world2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4>内置函数</h4><h5>list命令</h5><p><code>list(操作关键字 &lt;listvar&gt; [其他参数...])</code></p><p>e.g.</p><p>LENGTH：获取数组长度</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(listVal a b c)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">list(LENGTH listVar listLength)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message(&quot;listLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">listLength</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># listLength: 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>GET：获取指定位置</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(listVar a b c)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">list(GET listVar 0 firstItem)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message(&quot;firstItem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">firstItem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># firstItem: a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JOIN、APPEND</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(listVar a b c)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">list(APPEND listVar d)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">list(JOIN listVar &quot;-&quot; outStr)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message(&quot;outStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">outStr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># outStr: a-b-c-d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>string命令</h5><p><code>string(操作关键字 &lt;list&gt; [其他参数...])</code></p><p>e.g.</p><p>FIND</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">string(FIND &quot;interesting&quot; &quot;in&quot; fIndex)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">string(FIND &quot;interesting&quot; &quot;in&quot; rIndex REVERSE)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">message(&quot;fIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fIndex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">message(&quot;rIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rIndex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>math命令</h5><p><code>math(EXPR &lt;variable&gt; &quot;&lt;expr&gt;&quot; [OUTPUT_FORMAT &lt;format:HEXADECIMAL/DECIMAL&gt;])</code></p><p>运算符： <code>+-*/%|&amp;^~.</code> <code>&lt;&lt;&gt;&gt;()</code></p><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(myVar 1+2*6/2)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">message(&quot;myVar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># myVar = 1+2*6/2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">math(EXPR a 1+2*6/2)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">math(EXPR b </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">*3)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">message(&quot;a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># a = 7</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">message(&quot;b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># b = 21</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>file命令</h5><p><code>file(操作关键字 &lt;var&gt; [其他参数...])</code></p><ul><li>读 <ul><li>READ</li><li>STRINGS</li><li>HASH</li><li>TIMESTAMP</li></ul></li><li>写 <ul><li>WRITE</li><li>TOUCH</li><li>GENERATE</li><li>GONFIGURE</li></ul></li><li>文件系统 <ul><li>GLOB —— 获取文件列表</li><li>MAKE_DIRECTORY</li><li>REMOVE</li><li>COPY</li><li>COPY_FILE</li><li>CHMOD</li></ul></li><li>路径转换 <ul><li>REAL_PATH</li><li>RELATIVE_PATH</li></ul></li><li>传输 <ul><li>DOWNLOAD</li><li>UPLOAD</li></ul></li></ul><p>e.g.</p><p>GLOB：列出目录文件 💡自动添加文件</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">file(GLOB varFileList</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  LIST_DIRECTORIES false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  CONFIGURE_DEPENDS RELATIVE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_SOURCE_DIR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> &quot;*.cpp&quot;)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">message(&quot;varFileList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">varFileList</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># varFileList: main.cpp;shape.cpp</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">add_executable(MyApp </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">varFileList</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">file(GENERATE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  OUTPUT generatorExample.txt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  CONTENT &quot;platform = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">PLATFORM_ID&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  TARGET myApp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="宏-macro" tabindex="-1"><a class="header-anchor" href="#宏-macro"><span>宏（Macro）</span></a></h3><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">macro(myMacro arg...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # command</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endmacro()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>宏和函数类似，但是函数有自己的栈（Stack），而宏相当于将内容插入到上下文。</p><p>宏和函数还有其他区别，如：</p><ul><li><p>宏的参数是值，函数的参数是变量，这在逻辑判断上会有分歧</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">function(my_function a) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这里a是变量</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  if(a) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 变量判断非&quot;&quot;，结果为真</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    message(&quot;true&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  endif()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endfunction()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">macro(my_macro a) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这里a是字符串&quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  if(a) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 字符串判断非&quot;TRUE&quot;，结果为假</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  else()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    message(&quot;false&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  end()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endmacro()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">my_function(hello) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">my_macro(hello) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>宏用return命令会导致调用者的上下文退出</p></li></ul><p>简单来说： 优先使用函数，而不是使用宏。</p></div><h3 id="id-properties-scope" tabindex="-1"><a class="header-anchor" href="#id-properties-scope"><span>作用域（Scope）</span></a></h3><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 默认范围</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(myVar cat)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">block()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  set(myVar dog)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># dog</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endblock()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># cat</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PARENT_SCOPE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(myVar cat)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">block()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  set(myVar dog PARENT_SCOPE) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改外层变量值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># cat</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endblock()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># dog</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PROPAGATE —— 传递</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(myVar cat)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">block(SCOPE_FOR VARIABLES PROPAGATE myVar) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 内部的修改可直接传递到外面</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  set(myVar dog)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># dog</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endblock()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">message(&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">&quot;) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># dog</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成器表达式-generator-expression" tabindex="-1"><a class="header-anchor" href="#生成器表达式-generator-expression"><span>生成器表达式（Generator Expression）</span></a></h3><p>格式： <code>$&lt;...&gt;</code></p><p>取值时机： 编译时（<code>cmake --build .</code>）才确定取值</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">add_custom_target(MyTarget</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  ALL</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  COMMAND </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_COMMAND</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> -E echo &quot;platform = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">PLATFORM_ID&gt;&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常见：</p><ul><li><p><code>$&lt;PLATFORM_ID&gt;</code> —— 生成的平台，如windows、linux、macos</p></li><li><p><code>$&lt;CXX_COMPILER_ID&gt;</code> —— 所使用的编译器编号，如GNU、MSVC、</p></li><li><p><code>$&lt;CXX_COMPILER_VERSION&gt;</code> —— 所使用的编译版本号</p></li><li><p><code>$&lt;condition:trueValue&gt;</code> —— 判断</p></li><li><p><code>$&lt;IF:condition,trueValue,falseValue&gt;</code> —— 三元运算符</p></li><li><p><code>$&lt;BOOL:value&gt;</code> —— 将Y/off/no/...等转换为0/1</p></li><li><p><code>$&lt;AND:...&gt;</code></p></li><li><p><code>$&lt;OR:...&gt;</code></p></li><li><p><code>$&lt;NOT:value&gt;</code></p></li></ul><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">set(myVar 0)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">file(GENERATE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> OUTPUT</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> generatorExample1.txt</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CONTENT</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> &quot;res</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> $&lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">IF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myVar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">,hello,bye&gt;&quot; TARGET myApp) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># res = bye</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">target_compile_options(MyApp</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">PRIVATE</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">  $&lt;$&lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CXX_COMPILER_ID:GNU&gt;,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CONFIG:Debug&gt;&gt;:-Og&gt;)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">  $&lt;$&lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CXX_COMPILER_ID:GNU&gt;,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CONFIG:Release&gt;&gt;:-O2&gt;)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">  $&lt;$&lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CXX_COMPILER_ID:MSVC&gt;,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CONFIG:Debug&gt;&gt;:/Od&gt;)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">  $&lt;$&lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CXX_COMPILER_ID:MSVC&gt;,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">CONFIG:Release&gt;&gt;:/O2&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进阶概念" tabindex="-1"><a class="header-anchor" href="#进阶概念"><span>进阶概念</span></a></h2><h3 id="包含-include" tabindex="-1"><a class="header-anchor" href="#包含-include"><span>包含（include）</span></a></h3><p><code>include(xx)</code> 作用单纯是把指定位置的内容引入到当前文件。</p><p>它并不会改变相对路径的锚点，比如在 /CMakeLists.txt 中使用 <code>include(some/x.cmake)</code> 引入 <code>add_subdirectory(x.cpp)</code> 命令会失败，因为要改成引入 <code>add_subdirectory(some/cpp)</code> 命令。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>因为include有不改变相对路径的锚点的问题（特性？），所以一般在其中写与路径无关的内容，如下载等功能性的函数。</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">(FetchContent) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 引入函数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># https://github.com/google/googletest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">FetchContent_Declare(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  googletest</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  URL</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> https</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">//github.com/google/googletest/archive/refs/tags/v1.17.0.zip</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="模块-module" tabindex="-1"><a class="header-anchor" href="#模块-module"><span>模块（Module）</span></a></h3><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>参考：</p><ul><li><a href="https://cmake.com.cn/cmake/help/latest/manual/cmake-packages.7.html#config-file-packages" target="_blank" rel="noopener noreferrer">https://cmake.com.cn/cmake/help/latest/manual/cmake-packages.7.html#config-file-packages</a></li><li><a href="https://cmake.com.cn/cmake/help/latest/guide/using-dependencies/index.html#config-file-packages" target="_blank" rel="noopener noreferrer">https://cmake.com.cn/cmake/help/latest/guide/using-dependencies/index.html#config-file-packages</a></li><li><a href="https://cmake.com.cn/cmake/help/latest/command/find_package.html#command:find_package" target="_blank" rel="noopener noreferrer">https://cmake.com.cn/cmake/help/latest/command/find_package.html#command:find_package</a></li></ul></div><p>在CMake里，模块（Module）是一个包含可重用代码的CMake文件。</p><p>可以通过<code>find_packages</code>命令找到这些模块，然后通过<code>target_link_libraries</code>命令将。</p><p>e.g.</p><div class="language-makefile line-numbers-mode" data-highlighter="shiki" data-ext="makefile" data-title="makefile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">find_package(OpenSSL REQUIRED)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">if (NOT OPENSSL_FOUND)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  message(SEND_ERROR &quot;OpenSSL not found&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">endif()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">target_link_libraries(MyTarget</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> INTERFACE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> OpenSSL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">:SSL OpenSSL::Crypto)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Cmake维护一些常用的三方库的模块列表： <a href="https://cmake.org/cmake/help/latest/manual/cmake-modules.7.html" target="_blank" rel="noopener noreferrer">https://cmake.org/cmake/help/latest/manual/cmake-modules.7.html</a></p><h4>一、查找模块</h4><p>cmake查找模块有两种模式：</p><ol><li><p>通过查找<code>Find&lt;PackageName&gt;.cmake</code>文件，查找模块的引入方式</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>这种形式虽然方便，但是因为模块和三方库是分开维护的，所以会有第三方库过时的情况。</p></div></li><li><p>通过配置文件配置形式查找模块的引入方式</p></li></ol><h5>通过FindXxx.cmake文件查找三方包</h5><p>cmake到下面两个目录查找名为<code>Find&lt;PackageName&gt;.cmake</code>的“查找模块”：</p><ol><li><p>在CMake安装目录的modules目录中 （e.g. <code>/usr/share/cmake/Modules</code>）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -qa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake-filesystem-3.31.6-2.fc42.x86_64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rpm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ql</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake-data-3.31.6-2.fc42.noarch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/share/cmake/Help/module/FindOpenSSL.rst</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/share/cmake/Modules/FindOpenSSL.cmake</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # ————————————— openssl模块💡</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在<code>CMAKE_MODULE_PATH</code>列表目录中（自定义模块可以添加到这里，<code>find_packages</code>会从中优先查找模块）</p></li></ol><p>以OpenSSL为例： 由<code>find_package(OpenSSL REQUIRED)</code>命令开始，cmake会找到FindOpenSSL.cmake文件。 通过读取这个文件，可以找到OpenSSL的依赖项（相关的头文件、库文件，并且对不同操作系统做了区分），进而对依赖项进行关联。</p><h5>通过配置文件形式查找三方包</h5><p>参考： <a href="https://cmake.com.cn/cmake/help/latest/manual/cmake-packages.7.html#package-configuration-file" target="_blank" rel="noopener noreferrer">https://cmake.com.cn/cmake/help/latest/manual/cmake-packages.7.html#package-configuration-file</a></p><h4>二、导入目标（Imported Targets）</h4><p><code>find_packages</code>找到三方包后，会定义“导入目标（Imported Targets）”。 如对于OpenSSL，会定义 <code>OpenSSL::SSL</code>/<code>OpenSSL::Crypto</code>/<code>OpenSSL::applink</code>/... 等导入目标。 其中 <code>OpenSSL</code> 是名空间，后面 SSL/Crypto/applink/... 等是库的名称，与C++的命名空间类似。</p><h3 id="生成器-generator" tabindex="-1"><a class="header-anchor" href="#生成器-generator"><span>生成器（Generator）</span></a></h3><p>生成如 makefile、VS2017 等不同构建工具需要的文件的生成器。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看生成器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Error:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> No</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> generator</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> specified</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Generators</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Green</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Hills</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MULTI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Green</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Hills</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MULTI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">experimental,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> work-in-progress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">* Unix Makefiles               = Generates standard UNIX makefiles. </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># --- 💡前面带*号，默认生成器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build.ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Multi-Config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Confi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Watcom</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WMake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Watcom</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WMake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> makefiles.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  CodeBlocks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CodeBlocks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  CodeBlocks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Unix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Makefiles</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CodeBlocks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  CodeLite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CodeLite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  CodeLite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Unix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Makefiles</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CodeLite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Eclipse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CDT4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Eclipse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CDT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Eclipse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CDT4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Unix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Makefiles=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Eclipse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CDT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Kate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Kate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (deprecated).</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Kate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Multi-Config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Kate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (deprecated).</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Kate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Unix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Makefiles</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Kate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (deprecated).</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Sublime</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ninja</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Sublime</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Sublime</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Unix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Makefiles</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                               =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Generates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Sublime</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> files</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deprecated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="preset" tabindex="-1"><a class="header-anchor" href="#preset"><span>Preset</span></a></h3><p>通过json配置指定cmake工具链的位置。</p><h3 id="测试-ctest" tabindex="-1"><a class="header-anchor" href="#测试-ctest"><span>测试（CTest）</span></a></h3><p>cmake提供ctest可执行程序来拉起CMakeList.txt中配置的测试用例。</p><p>在CMakeList.txt中配置测试用例需要如下步骤：</p><ol><li>添加<code>enable_test</code>指令，生成测试用例入口，如makefile的<code>make test</code>目标</li><li>添加<code>add_test</code>指令，生成测试用例的入口，如makefile的<code>make test_myadd_usecase</code>目标</li></ol><h3 id="打包-cpack" tabindex="-1"><a class="header-anchor" href="#打包-cpack"><span>打包（CPack）</span></a></h3><p>todo 为打包需求提供了DSL</p><h3 id="统计-cdash" tabindex="-1"><a class="header-anchor" href="#统计-cdash"><span>统计（CDash）</span></a></h3><p>todo 将项目的测试结果在面板中展示</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例"><span>案例</span></a></h2><h3 id="分层目录demo" tabindex="-1"><a class="header-anchor" href="#分层目录demo"><span>分层目录Demo</span></a></h3><p>代码仓：</p>`,171)),h(p,{path:"/code/code/demo-c-base/demo-03-cmake/02-directory/CmakeLists.txt"}),a[16]||(a[16]=t("<p>包含：</p><ul><li>[x] 分层目录组织方式</li><li>[ ] 定义接口库（只有接口，没有实现）</li><li>[x] 配置和使用第三方库（with <code>source code</code> for cpp-httplib）</li><li>[x] 配置和使用第三方库（with <code>xxx-devel</code> for openssl）</li><li>[x] 配置和使用第三方库（with <code>FetchContent</code> for googletest）</li><li>[ ] 配置和使用第三方库（with <code>vcpkg</code> for zlib）</li><li>[x] 集成Google测试框架</li><li>[ ] 包的安装</li><li>[ ] 配置和使用自定义包</li></ul>",2))])}const b=c(y,[["render",m]]),E=JSON.parse('{"path":"/zh/dev-c-commonsense/cmake.html","title":"cmake 使用笔记","lang":"zh-CN","frontmatter":{"title":"cmake 使用笔记","order":20,"description":"CMake（Cross-Platform Make）是一个跨平台的构建系统，它可以根据用户编写CMakeLists.txt文件生成适用于不同编译器和操作系统的构建文件。 如生成 Visual Studio 17 的 .sln、XCode 的 .xcodeproj、Ninja 的 .ninja、make 的 Makefile文件。 进而生成可执行文件、静...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-c-commonsense/cmake.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"cmake 使用笔记"}],["meta",{"property":"og:description","content":"CMake（Cross-Platform Make）是一个跨平台的构建系统，它可以根据用户编写CMakeLists.txt文件生成适用于不同编译器和操作系统的构建文件。 如生成 Visual Studio 17 的 .sln、XCode 的 .xcodeproj、Ninja 的 .ninja、make 的 Makefile文件。 进而生成可执行文件、静..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-06T03:15:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-06T03:15:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cmake 使用笔记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-06T03:15:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"Getting Start","slug":"getting-start","link":"#getting-start","children":[]},{"level":2,"title":"常见指令","slug":"常见指令","link":"#常见指令","children":[]},{"level":2,"title":"基础概念","slug":"id-base-consensus","link":"#id-base-consensus","children":[{"level":3,"title":"属性（Properties）","slug":"属性-properties","link":"#属性-properties","children":[]},{"level":3,"title":"变量（Variables）","slug":"变量-variables","link":"#变量-variables","children":[{"level":4,"title":"普通变量","slug":"普通变量","link":"#普通变量","children":[]},{"level":4,"title":"环境变量（Env Variable）","slug":"环境变量-env-variable","link":"#环境变量-env-variable","children":[]},{"level":4,"title":"缓存变量（Cache Variable）","slug":"id-value-cache","link":"#id-value-cache","children":[]}]},{"level":3,"title":"流程控制","slug":"流程控制","link":"#流程控制","children":[{"level":4,"title":"if/elseif/else/endif","slug":"if-elseif-else-endif","link":"#if-elseif-else-endif","children":[]},{"level":4,"title":"option","slug":"option","link":"#option","children":[]},{"level":4,"title":"foreach/IN/ITEMS/LISTS/ZIP_LISTS/RANGE","slug":"foreach-in-items-lists-zip-lists-range","link":"#foreach-in-items-lists-zip-lists-range","children":[]},{"level":4,"title":"while","slug":"while","link":"#while","children":[]},{"level":4,"title":"break/continue","slug":"break-continue","link":"#break-continue","children":[]},{"level":4,"title":"关键字","slug":"关键字","link":"#关键字","children":[{"level":5,"title":"AND/OR/NOT","slug":"and-or-not","link":"#and-or-not","children":[]},{"level":5,"title":"比较运算符","slug":"比较运算符","link":"#比较运算符","children":[]},{"level":5,"title":"文件操作","slug":"文件操作","link":"#文件操作","children":[]},{"level":5,"title":"存在性测试","slug":"存在性测试","link":"#存在性测试","children":[]},{"level":5,"title":"预定义变量","slug":"预定义变量","link":"#预定义变量","children":[]}]}]},{"level":3,"title":"函数（Function）","slug":"函数-function","link":"#函数-function","children":[{"level":4,"title":"命名参数、未命名参数","slug":"命名参数、未命名参数","link":"#命名参数、未命名参数","children":[]},{"level":4,"title":"关键字参数","slug":"关键字参数","link":"#关键字参数","children":[]},{"level":4,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":4,"title":"内置函数","slug":"内置函数","link":"#内置函数","children":[{"level":5,"title":"list命令","slug":"list命令","link":"#list命令","children":[]},{"level":5,"title":"string命令","slug":"string命令","link":"#string命令","children":[]},{"level":5,"title":"math命令","slug":"math命令","link":"#math命令","children":[]},{"level":5,"title":"file命令","slug":"file命令","link":"#file命令","children":[]}]}]},{"level":3,"title":"宏（Macro）","slug":"宏-macro","link":"#宏-macro","children":[]},{"level":3,"title":"作用域（Scope）","slug":"id-properties-scope","link":"#id-properties-scope","children":[]},{"level":3,"title":"生成器表达式（Generator Expression）","slug":"生成器表达式-generator-expression","link":"#生成器表达式-generator-expression","children":[]}]},{"level":2,"title":"进阶概念","slug":"进阶概念","link":"#进阶概念","children":[{"level":3,"title":"包含（include）","slug":"包含-include","link":"#包含-include","children":[]},{"level":3,"title":"模块（Module）","slug":"模块-module","link":"#模块-module","children":[{"level":4,"title":"一、查找模块","slug":"一、查找模块","link":"#一、查找模块","children":[{"level":5,"title":"通过FindXxx.cmake文件查找三方包","slug":"通过findxxx-cmake文件查找三方包","link":"#通过findxxx-cmake文件查找三方包","children":[]},{"level":5,"title":"通过配置文件形式查找三方包","slug":"通过配置文件形式查找三方包","link":"#通过配置文件形式查找三方包","children":[]}]},{"level":4,"title":"二、导入目标（Imported Targets）","slug":"二、导入目标-imported-targets","link":"#二、导入目标-imported-targets","children":[]}]},{"level":3,"title":"生成器（Generator）","slug":"生成器-generator","link":"#生成器-generator","children":[]},{"level":3,"title":"Preset","slug":"preset","link":"#preset","children":[]},{"level":3,"title":"测试（CTest）","slug":"测试-ctest","link":"#测试-ctest","children":[]},{"level":3,"title":"打包（CPack）","slug":"打包-cpack","link":"#打包-cpack","children":[]},{"level":3,"title":"统计（CDash）","slug":"统计-cdash","link":"#统计-cdash","children":[]}]},{"level":2,"title":"案例","slug":"案例","link":"#案例","children":[{"level":3,"title":"分层目录Demo","slug":"分层目录demo","link":"#分层目录demo","children":[]}]}],"git":{"createdTime":1758475489000,"updatedTime":1759720514000,"contributors":[{"name":"lawsssscat","username":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":10,"url":"https://github.com/lawsssscat"}]},"readingTime":{"minutes":15.33,"words":4598},"filePathRelative":"zh/dev-c-commonsense/cmake.md","localizedDate":"2025年9月21日","excerpt":"<p>CMake（Cross-Platform Make）是一个跨平台的构建系统，它可以根据用户编写<code>CMakeLists.txt</code>文件生成适用于不同编译器和操作系统的构建文件。\\n如生成 Visual Studio 17 的 <code>.sln</code>、XCode 的 <code>.xcodeproj</code>、Ninja 的 <code>.ninja</code>、make 的 <code>Makefile</code>文件。\\n进而生成可执行文件、静态库、动态库等目标文件。</p>\\n<p>关键字：跨编译器、跨平台</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>关于cmake版本：</p>\\n<ul>\\n<li>在cmake的早期版本（2.xx）中是使用<code>directory-oriented</code>的方式来管理“属性”的传递性的。当你定义了一个属性，就意味着当前文件夹和子文件夹会使用这些属性。这使得你必须按照实际目录的方式来管理cmake的依赖关系。</li>\\n<li>在cmake的新版本（2015年左右，称“modern cmake”）中使用<code>target-oriented</code>的方式来管理“属性”的传递性。对属性的传递性做了抽象，剥离了与文件实际目录的耦合。</li>\\n</ul>\\n<p>本文不做说明则以新版本管理方式记录cmake的使用。\\n上述概念区别在后面有<a href=\\"todo\\">章节</a>分析。</p>\\n</div>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">$</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> cmake</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> --version</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">cmake</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> version</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 3.31.6</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">CMake</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> suite</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> maintained</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> and</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> supported</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> by</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Kitware</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (kitware.com/cmake).</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{b as comp,E as data};
