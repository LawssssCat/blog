import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as s,a as e,b as d,f as t,e as n,w as o,r,o as m}from"./app-8wgnlyR1.js";const g={};function c(b,l){const p=r("RepoLink"),i=r("RouteLink");return m(),a("div",null,[l[29]||(l[29]=s('<h2 id="开发环境配置" tabindex="-1"><a class="header-anchor" href="#开发环境配置"><span>开发环境配置</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>入门C/C++环境搭建是最重要的，因为这关乎到开发过程中的关键词提示、调试、编译/交叉编译、用例测试/基线测试/覆盖测试、打包发布等各个流程的具体操作。 但是，搭建环境又不是最基础的，因为个人如下原因：</p><ol><li><strong>选择多</strong> —— 语言历史悠久，最初没有方便好用的ide工具，后面又有太多自成体系的好工具而没有一套统一的ide工具集。</li><li><strong>需求不一样</strong> —— 不同阶段不同场景对开发环境需求不一样，阶段不同：有的只需要能编译、有的还需要调试、有的需要测试打包发布甚至自动化；开发环境需求不同：做CUDA开发、做Qt开发、做STM32开发、做Web开发、等等。</li><li><strong>前置知识多</strong> —— 要真正了解开发环境全貌，可能需要对编译原理、cmake、gtest、llvm等有住够的了解。</li></ol><p>基于这些原因，很多指导是零散的、自相矛盾的、易出问题的。</p><p>一般情况下，我们希望直接处理业务问题。 因此本人在经历各种折磨后，决定把用过觉得顺手的或者目前正在使用的开发环境搭建流程进行记录，希望需要时候能起作用。</p></div><p>开发系统</p><ul><li>Linux <ul><li>直接在主系统开发 —— ❗不推荐，因为编译产物可能会污染到主系统</li></ul></li><li>Windows <ul><li>直接在主系统开发 —— 只是ide把东西隐藏了，实际还会用下面的技术</li><li>切换Linux环境：模拟 <ul><li>MinGW</li></ul></li><li>切换Linux环境：容器 <ul><li>WSL</li></ul></li><li>切换Linux环境：虚拟机 <ul><li>vmware</li><li>vagrant</li></ul></li></ul></li><li>macos</li></ul><p>开发工具</p>',5)),e("ul",null,[l[5]||(l[5]=s('<li><p>Jetbrain Clion —— JetBrains公司提供的（著名产品Java的Idea），目前免费（支持ja-netfilter），产品化无需太多配置</p><ul><li>工具链：vcpkg + cmake + gcc/clang,llvm + gdb/lldb,gtest <ul><li>适合：Idea过来，<strong>Windows环境</strong>，且了解c/c++工具链各工具作用</li><li>插件： <ul><li>中文语言包</li><li>clang-format</li></ul></li><li>todo 指导 <a href="https://www.bilibili.com/video/BV18R4y127UV" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV18R4y127UV</a></li></ul></li><li>工具链：xx + qt <ul><li>适合：QT开发</li><li>todo <a href="https://www.bilibili.com/video/BV18q4y1i7kV/" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV18q4y1i7kV/</a></li></ul></li><li>工具链：xx <ul><li>适合：STM32开发</li><li>todo <a href="https://zhuanlan.zhihu.com/p/145801160" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/145801160</a></li></ul></li></ul></li>',1)),e("li",null,[l[4]||(l[4]=e("p",null,"VSCode",-1)),e("ul",null,[e("li",null,[l[3]||(l[3]=t("工具链：vcpkg + cmake + gcc/clang,llvm + lldb,gtest ",-1)),e("ul",null,[l[1]||(l[1]=e("li",null,"适合：Linux环境或者有跨平台构建需求，且了解c/c++工具链各工具作用",-1)),e("li",null,[l[0]||(l[0]=t("Demo：",-1)),n(p,{path:"/code/demo-c-base/README.md"})]),l[2]||(l[2]=s('<li>插件 <ul><li><s>C/C++ Extension Pack (ms-vscode.cpptools-extension-pack)</s> —— ❗别下载这个，我们用clang编译，不用gcc编译</li><li><a href="https://clangd.llvm.org/" target="_blank" rel="noopener noreferrer">clangd (llvm-vs-code-extensions.vscode-clangd)</a></li><li>Clang-Format</li><li>CodeLLDB (vadimcn.vscode-lldb) —— 测试</li><li><a href="https://github.com/microsoft/vscode-cmake-tools/blob/main/docs/cmake-settings.md#command-substitution" target="_blank" rel="noopener noreferrer">CMake Tools (ms-vscode.cmake-tools)</a></li><li>C++ TestMate (matepek.vscode-catch2-test-adapter) —— 处理 CMake Tools 插件提供用例清单的两个问题：1、用例清单无法跳转用例代码，巨麻烦；2、用例代码左侧无启动按钮，要到用例清单找到用例执行，麻烦</li></ul></li><li>测试：gtest</li>',2))])])])]),l[6]||(l[6]=e("li",null,[e("p",null,"Visual Studio —— todo 未了解。听说有开发工具版本兼容问题，如vs2012项目到vs2017不能直接编译等问题")],-1)),l[7]||(l[7]=e("li",null,[e("p",null,"Eclipse IDE for C/C++ Developers —— 25年 Java 都不用 Eclipse ide 了...")],-1))]),l[30]||(l[30]=s('<h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档"><span>文档</span></a></h2><ul><li><p>语法</p><ul><li><s>C++教程 <a href="https://www.runoob.com/cplusplus/cpp-useful-resources.html" target="_blank" rel="noopener noreferrer">https://www.runoob.com/cplusplus/cpp-useful-resources.html</a></s></li></ul></li><li><p>接口</p><ul><li>中文 <ul><li>C/C++参考（API Reference Document） —— <a href="https://www.apiref.com/cpp-zh/cpp/utility/functional/bind.html" target="_blank" rel="noopener noreferrer">https://www.apiref.com/cpp-zh/cpp/utility/functional/bind.html</a></li><li>C/C++参考 —— <a href="https://cppreference.cn/w/" target="_blank" rel="noopener noreferrer">https://cppreference.cn/w/</a></li></ul></li><li>英文 <ul><li>C/C++参考 —— <a href="https://en.cppreference.com/w/cpp/header.html" target="_blank" rel="noopener noreferrer">https://en.cppreference.com/w/cpp/header.html</a></li><li>cstdlib —— <a href="https://cplusplus.com/reference/cstdlib/" target="_blank" rel="noopener noreferrer">https://cplusplus.com/reference/cstdlib/</a></li></ul></li></ul></li></ul><h2 id="编译-语法" tabindex="-1"><a class="header-anchor" href="#编译-语法"><span>编译&amp;语法</span></a></h2>',3)),d(` todo
详解三大编译器：gcc、llvm 和 clang | <https://zhuanlan.zhihu.com/p/357803433>
`),l[31]||(l[31]=e("p",null,"编译链：",-1)),e("ul",null,[e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/gcc.html"},{default:o(()=>[...l[8]||(l[8]=[t("gcc",-1)])]),_:1})])]),e("li",null,[l[10]||(l[10]=e("p",null,"LLVM",-1)),e("ul",null,[e("li",null,[n(i,{to:"/zh/dev-c-commonsense/llvm/clang.html"},{default:o(()=>[...l[9]||(l[9]=[t("clang",-1)])]),_:1})])])]),e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/makefile.html"},{default:o(()=>[...l[11]||(l[11]=[t("makefile",-1)])]),_:1})])]),e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/cmake.html"},{default:o(()=>[...l[12]||(l[12]=[t("cmake",-1)])]),_:1})])]),l[14]||(l[14]=s("<li><p>包管理</p><p>习惯：</p><ul><li>简单的用 FetchContent 管理</li><li>复杂的用 vcpkg + find_packages 管理</li></ul><p>选项：</p><ul><li>源码下载、<code>./configure</code>、<code>make</code>、<code>make install</code> （推荐）</li><li>cmake <code>FetchContent</code></li><li>xrepo</li><li>bazel</li><li>meson</li><li>...</li></ul></li>",1)),e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/mingw.html"},{default:o(()=>[...l[13]||(l[13]=[t("MinGW",-1)])]),_:1})])]),l[15]||(l[15]=e("li",null,[e("p",null,"cygwin")],-1))]),l[32]||(l[32]=e("h2",{id:"调试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#调试"},[e("span",null,"调试")])],-1)),e("ul",null,[e("li",null,[n(i,{to:"/zh/dev-c-commonsense/gdb.html"},{default:o(()=>[...l[16]||(l[16]=[t("gdb",-1)])]),_:1})]),l[17]||(l[17]=e("li",null,"CodeLLDB",-1))]),l[33]||(l[33]=e("h2",{id:"三方件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#三方件"},[e("span",null,"三方件")])],-1)),l[34]||(l[34]=e("p",null,"通用",-1)),e("ul",null,[e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/lib-glibc/"},{default:o(()=>[...l[18]||(l[18]=[t("glibc",-1)])]),_:1}),l[19]||(l[19]=t(" —— C标准库",-1))])]),e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/lib-perl/"},{default:o(()=>[...l[20]||(l[20]=[t("perl",-1)])]),_:1})])]),e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/lib-openssl/"},{default:o(()=>[...l[21]||(l[21]=[t("openssl",-1)])]),_:1})])]),l[22]||(l[22]=e("li",null,[e("p",null,"fmt —— 格式化库")],-1)),l[23]||(l[23]=e("li",null,[e("p",null,"zlib —— 压缩库")],-1))]),l[35]||(l[35]=e("p",null,"Web",-1)),l[36]||(l[36]=e("ul",null,[e("li",null,"drogon —— web服务器"),e("li",null,[e("a",{href:"https://github.com/yhirose/cpp-httplib/blob/master/CMakeLists.txt",target:"_blank",rel:"noopener noreferrer"},"cpp-httplib")])],-1)),l[37]||(l[37]=e("p",null,"测试",-1)),e("ul",null,[e("li",null,[e("p",null,[n(i,{to:"/zh/dev-c-commonsense/lib-gtest/"},{default:o(()=>[...l[24]||(l[24]=[t("gtest",-1)])]),_:1})])]),l[25]||(l[25]=e("li",null,[e("p",null,"doctest")],-1)),l[26]||(l[26]=e("li",null,[e("p",null,"catch2 —— 也是一个测试框架")],-1)),l[27]||(l[27]=e("li",null,[e("p",null,"googlebench")],-1)),l[28]||(l[28]=e("li",null,[e("p",null,"nanobench —— 性能基线测试")],-1))])])}const v=u(g,[["render",c]]),k=JSON.parse('{"path":"/zh/dev-c-commonsense/","title":"C/C++ 开发","lang":"zh-CN","frontmatter":{"title":"C/C++ 开发","order":1,"description":"开发环境配置 提示 入门C/C++环境搭建是最重要的，因为这关乎到开发过程中的关键词提示、调试、编译/交叉编译、用例测试/基线测试/覆盖测试、打包发布等各个流程的具体操作。 但是，搭建环境又不是最基础的，因为个人如下原因： 选择多 —— 语言历史悠久，最初没有方便好用的ide工具，后面又有太多自成体系的好工具而没有一套统一的ide工具集。 需求不一样 ...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-c-commonsense/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"C/C++ 开发"}],["meta",{"property":"og:description","content":"开发环境配置 提示 入门C/C++环境搭建是最重要的，因为这关乎到开发过程中的关键词提示、调试、编译/交叉编译、用例测试/基线测试/覆盖测试、打包发布等各个流程的具体操作。 但是，搭建环境又不是最基础的，因为个人如下原因： 选择多 —— 语言历史悠久，最初没有方便好用的ide工具，后面又有太多自成体系的好工具而没有一套统一的ide工具集。 需求不一样 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-06T03:09:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-06T03:09:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C/C++ 开发\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-06T03:09:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"开发环境配置","slug":"开发环境配置","link":"#开发环境配置","children":[]},{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"编译&语法","slug":"编译-语法","link":"#编译-语法","children":[]},{"level":2,"title":"调试","slug":"调试","link":"#调试","children":[]},{"level":2,"title":"三方件","slug":"三方件","link":"#三方件","children":[]}],"git":{"createdTime":1758428327000,"updatedTime":1759720154000,"contributors":[{"name":"lawsssscat","username":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":10,"url":"https://github.com/lawsssscat"}]},"readingTime":{"minutes":3.14,"words":941},"filePathRelative":"zh/dev-c-commonsense/README.md","localizedDate":"2025年9月21日","excerpt":"<h2>开发环境配置</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>入门C/C++环境搭建是最重要的，因为这关乎到开发过程中的关键词提示、调试、编译/交叉编译、用例测试/基线测试/覆盖测试、打包发布等各个流程的具体操作。\\n但是，搭建环境又不是最基础的，因为个人如下原因：</p>\\n<ol>\\n<li><strong>选择多</strong> —— 语言历史悠久，最初没有方便好用的ide工具，后面又有太多自成体系的好工具而没有一套统一的ide工具集。</li>\\n<li><strong>需求不一样</strong> —— 不同阶段不同场景对开发环境需求不一样，阶段不同：有的只需要能编译、有的还需要调试、有的需要测试打包发布甚至自动化；开发环境需求不同：做CUDA开发、做Qt开发、做STM32开发、做Web开发、等等。</li>\\n<li><strong>前置知识多</strong> —— 要真正了解开发环境全貌，可能需要对编译原理、cmake、gtest、llvm等有住够的了解。</li>\\n</ol>\\n<p>基于这些原因，很多指导是零散的、自相矛盾的、易出问题的。</p>\\n<p>一般情况下，我们希望直接处理业务问题。\\n因此本人在经历各种折磨后，决定把用过觉得顺手的或者目前正在使用的开发环境搭建流程进行记录，希望需要时候能起作用。</p>\\n</div>","autoDesc":true}');export{v as comp,k as data};
