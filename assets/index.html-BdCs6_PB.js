import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,d as t,e as h,a as i,w as l,r as p,o as B,f as a}from"./app-yV4LJ0US.js";const A={};function c(o,s){const d=p("Tabs"),k=p("RouteLink");return B(),g("div",null,[s[8]||(s[8]=t('<h2 id="jdk10" tabindex="-1"><a class="header-anchor" href="#jdk10"><span>JDK10</span></a></h2><h3 id="局部变量的类型推断" tabindex="-1"><a class="header-anchor" href="#局部变量的类型推断"><span>局部变量的类型推断</span></a></h3><p><a href="https://java.didispace.com/java-features/java10/jep286-local-variable-type-inference.html" target="_blank" rel="noopener noreferrer">link</a></p>',3)),h(d,{id:"9",data:[{id:"JDK7之前"},{id:"JDK7 简化"},{id:"JDK10"}]},{title0:l(({value:e,isActive:n})=>[...s[0]||(s[0]=[a("JDK7之前",-1)])]),title1:l(({value:e,isActive:n})=>[...s[1]||(s[1]=[a("JDK7 简化",-1)])]),title2:l(({value:e,isActive:n})=>[...s[2]||(s[2]=[a("JDK10",-1)])]),tab0:l(({value:e,isActive:n})=>[...s[3]||(s[3]=[i("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"List"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," list "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," new"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," ArrayList"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"()"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Map"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," String"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," map "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," new"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," HashMap"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"()"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab1:l(({value:e,isActive:n})=>[...s[4]||(s[4]=[i("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"List"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," list "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," new"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," ArrayList"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<>"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"()"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"Map"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," String"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," map "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," new"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," HashMap"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<>"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"()"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])]),tab2:l(({value:e,isActive:n})=>[...s[5]||(s[5]=[i("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java","data-title":"java",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#C678DD"}},"var"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," list "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," new"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," ArrayList"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"()"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#C678DD"}},"var"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," map "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," new"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," HashMap"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}},"String"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," String"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"()"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[a("对于 "),i("code",null,"var"),a(" 的使用还有几点要注意的：")],-1),i("ol",null,[i("li",null,"定义的时候必须初始化"),i("li",null,"只能用于定义局部变量"),i("li",null,"不能用于定义成员变量、方法参数、返回类型"),i("li",null,"每次只能定义一个变量，不能复合声明变量")],-1)])]),_:1}),s[9]||(s[9]=t(`<h2 id="jdk14" tabindex="-1"><a class="header-anchor" href="#jdk14"><span>JDK14</span></a></h2><h3 id="jep-361-增强-switch-语法" tabindex="-1"><a class="header-anchor" href="#jep-361-增强-switch-语法"><span>JEP 361：增强 switch 语法</span></a></h3><blockquote><p>这里的JEP 361特性，经历了JDK 12、JDK 13两个预览版本之后才在JDK 14中定稿，所以部分功能在JDK 12和JDK 13中也会看到，但真正使用，还是建议在JDK 14之后的版本中应用</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DemoTest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        doSome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> doSome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> flag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (flag) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;"> -&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1:flag = &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> flag);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                flag++;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                // 无需 break</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;"> -&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2:flag = &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> flag); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 单行无需 {...}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 可以不写default分支</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;e:flag = &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> flag);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jdk15" tabindex="-1"><a class="header-anchor" href="#jdk15"><span>JDK15</span></a></h2><h2 id="jdk16" tabindex="-1"><a class="header-anchor" href="#jdk16"><span>JDK16</span></a></h2><h3 id="增强-instanceof-语法" tabindex="-1"><a class="header-anchor" href="#增强-instanceof-语法"><span>增强 instanceof 语法</span></a></h3><blockquote><p>该功能经历了2个Preview版本（JDK 14中的JEP 305、JDK 15中的JEP 375），最终定稿于JDK 16中的JEP 394</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DemoTest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        doSome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;str&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> doSome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (obj </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">instanceof</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value) { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 末尾加上变量名</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // String value = (String) data.get(&quot;key1); // 可以省略这行</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value = &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="增加-record-类型" tabindex="-1"><a class="header-anchor" href="#增加-record-类型"><span>增加 record 类型</span></a></h3>`,10)),i("p",null,[h(k,{to:"/zh/dev-java-commonsense/version-features/jdk16-recordtype.html"},{default:l(()=>[...s[6]||(s[6]=[a("link",-1)])]),_:1})]),s[10]||(s[10]=t('<h2 id="jdk17" tabindex="-1"><a class="header-anchor" href="#jdk17"><span>JDK17</span></a></h2><h2 id="jdk17-1" tabindex="-1"><a class="header-anchor" href="#jdk17-1"><span>JDK17</span></a></h2><h2 id="jdk18" tabindex="-1"><a class="header-anchor" href="#jdk18"><span>JDK18</span></a></h2><h2 id="jdk19" tabindex="-1"><a class="header-anchor" href="#jdk19"><span>JDK19</span></a></h2><h2 id="jdk20" tabindex="-1"><a class="header-anchor" href="#jdk20"><span>JDK20</span></a></h2><h2 id="jdk21" tabindex="-1"><a class="header-anchor" href="#jdk21"><span>JDK21</span></a></h2><p>OpenJDK21 https://openjdk.org/projects/jdk/21/</p><p>2023年9月20日，Oracle公司宣布Java 21正式发布。该版本是继JDK 17之后最新的长期支持版本（LTS），<strong>将获得至少8年的支持</strong>！</p><p>Java 21 号称具有数千项性能、稳定性和安全性改进。新的 JDK 21 包括对 15 项改进的抢先体验，这些增强功能是在 Oracle CloudWorld 2023 会议上宣布的，包括支持虚拟线程以提高整体吞吐量，以及增加对向量应用编程接口（API）的支持，从而更轻松地构建涉及人工智能 AI 模型的 Java 应用。</p><h3 id="新增api" tabindex="-1"><a class="header-anchor" href="#新增api"><span>新增API</span></a></h3><ul><li>HTTP Client API</li><li>向量 API</li><li>注解 API</li><li>Thread API</li></ul><h3 id="模式匹配" tabindex="-1"><a class="header-anchor" href="#模式匹配"><span>模式匹配</span></a></h3>',12)),i("p",null,[h(k,{to:"/zh/dev-java-commonsense/version-features/jdk21-patternmatching.html"},{default:l(()=>[...s[7]||(s[7]=[a("link",-1)])]),_:1})]),s[11]||(s[11]=t('<h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h2><h3 id="名词" tabindex="-1"><a class="header-anchor" href="#名词"><span>名词</span></a></h3><ul><li>JCP（Java Community Process，Java 社区流程）</li><li>JSL（Java Language Specification，Java 语言规范） —— 被实现的语言特性</li><li>JVMS（Java Virtual Machine Specification，Java 语言规范） —— 被实现的JVM特性</li><li>JSR（Java Specification Requests，Java 规范提案） —— 被接纳的特性。内容：专家组、JSL/JVMS变更说明、投票、计划（schedule）</li><li>JBS（JDK Bug System，JDK 问题跟踪系统） —— 通过issue跟踪BUG/JEP的实现</li><li>JEP（JDK Enhancement Proposal，JDK 增强建议） —— 被提出特性想法。内容：任何人、想法</li></ul><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h3><ul><li>Java 9 - 21：新特性解读 ⭐⭐⭐ https://java.didispace.com/java-features/</li><li>JDK 21新特性全解析：从JEP 400到JEP 420的35个要点 https://www.w3cschool.cn/hycig/hycig-bpvq3zff.html</li><li>JDK17 新特性（视频） https://www.bilibili.com/video/BV1k34y1U74K/</li><li>JDK18 新特性（视频） https://www.bilibili.com/video/BV1m5411U7ii/</li><li>JDK19 新特性（视频） https://www.bilibili.com/video/BV1ZV4y1N7eH/</li><li>JDK20 新特性（视频） https://www.bilibili.com/video/BV1JK411z78J/</li><li>JDK21 新特性（视频） https://www.bilibili.com/video/BV1Ah4y1X7wo/</li><li>JDK22 新特性（视频） https://www.bilibili.com/video/BV1DK4y1i7wM</li><li>JDK23 新特性（视频） https://www.bilibili.com/video/BV1Zi421v7E6/</li><li>JDK24 新特性（视频） https://www.bilibili.com/video/BV1j8S3YoE4X/</li></ul>',5))])}const u=r(A,[["render",c]]),m=JSON.parse('{"path":"/zh/dev-java-commonsense/version-features/","title":"Java 功能特性","lang":"zh-CN","frontmatter":{"title":"Java 功能特性","date":"2025-03-15T00:00:00.000Z","order":0,"description":"JDK10 局部变量的类型推断 link JDK14 JEP 361：增强 switch 语法 这里的JEP 361特性，经历了JDK 12、JDK 13两个预览版本之后才在JDK 14中定稿，所以部分功能在JDK 12和JDK 13中也会看到，但真正使用，还是建议在JDK 14之后的版本中应用 JDK15 JDK16 增强 instanceof 语法...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-java-commonsense/version-features/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"Java 功能特性"}],["meta",{"property":"og:description","content":"JDK10 局部变量的类型推断 link JDK14 JEP 361：增强 switch 语法 这里的JEP 361特性，经历了JDK 12、JDK 13两个预览版本之后才在JDK 14中定稿，所以部分功能在JDK 12和JDK 13中也会看到，但真正使用，还是建议在JDK 14之后的版本中应用 JDK15 JDK16 增强 instanceof 语法..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-07T16:37:44.000Z"}],["meta",{"property":"article:published_time","content":"2025-03-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-07T16:37:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 功能特性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-07T16:37:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"JDK10","slug":"jdk10","link":"#jdk10","children":[{"level":3,"title":"局部变量的类型推断","slug":"局部变量的类型推断","link":"#局部变量的类型推断","children":[]}]},{"level":2,"title":"JDK14","slug":"jdk14","link":"#jdk14","children":[{"level":3,"title":"JEP 361：增强 switch 语法","slug":"jep-361-增强-switch-语法","link":"#jep-361-增强-switch-语法","children":[]}]},{"level":2,"title":"JDK15","slug":"jdk15","link":"#jdk15","children":[]},{"level":2,"title":"JDK16","slug":"jdk16","link":"#jdk16","children":[{"level":3,"title":"增强 instanceof 语法","slug":"增强-instanceof-语法","link":"#增强-instanceof-语法","children":[]},{"level":3,"title":"增加 record 类型","slug":"增加-record-类型","link":"#增加-record-类型","children":[]}]},{"level":2,"title":"JDK17","slug":"jdk17","link":"#jdk17","children":[]},{"level":2,"title":"JDK17","slug":"jdk17-1","link":"#jdk17-1","children":[]},{"level":2,"title":"JDK18","slug":"jdk18","link":"#jdk18","children":[]},{"level":2,"title":"JDK19","slug":"jdk19","link":"#jdk19","children":[]},{"level":2,"title":"JDK20","slug":"jdk20","link":"#jdk20","children":[]},{"level":2,"title":"JDK21","slug":"jdk21","link":"#jdk21","children":[{"level":3,"title":"新增API","slug":"新增api","link":"#新增api","children":[]},{"level":3,"title":"模式匹配","slug":"模式匹配","link":"#模式匹配","children":[]}]},{"level":2,"title":"附录","slug":"附录","link":"#附录","children":[{"level":3,"title":"名词","slug":"名词","link":"#名词","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"git":{"createdTime":1742138840000,"updatedTime":1744043864000,"contributors":[{"name":"lawsssscat","username":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":2,"url":"https://github.com/lawsssscat"}]},"readingTime":{"minutes":2.58,"words":773},"filePathRelative":"zh/dev-java-commonsense/version-features/README.md","localizedDate":"2025年3月15日","excerpt":"<h2>JDK10</h2>\\n<h3>局部变量的类型推断</h3>\\n<p><a href=\\"https://java.didispace.com/java-features/java10/jep286-local-variable-type-inference.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">link</a></p>\\n\\n<h2>JDK14</h2>\\n<h3>JEP 361：增强 switch 语法</h3>\\n<blockquote>\\n<p>这里的JEP 361特性，经历了JDK 12、JDK 13两个预览版本之后才在JDK 14中定稿，所以部分功能在JDK 12和JDK 13中也会看到，但真正使用，还是建议在JDK 14之后的版本中应用</p>\\n</blockquote>","autoDesc":true}');export{u as comp,m as data};
