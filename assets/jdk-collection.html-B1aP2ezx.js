import{_ as r,r as o,o as p,c as e,d as s,b as i,w as l,e as a,f as t}from"./app-lD383_ZI.js";const k={},c=s("h2",{id:"stream",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#stream"},[s("span",null,"stream")])],-1),d=s("p",null,"参考：",-1),B=s("li",null,"Java 中的流、并行流 - Java Stream API | Parallel Streams - https://www.bilibili.com/video/BV1Vi421C73n/",-1),h=t(`<h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 创建</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Arrays</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">builder</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()....</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">build</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">IntStream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 生成/无限</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">iterate</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, n</span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">n</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&lt;=</span><span style="color:#005CC5;--shiki-dark:#D19A66;">10</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, n</span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">n</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 遍历</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">generate</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(() </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;hello world&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">limit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 无限生成，but limit 5</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">IntStream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">boxed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 无限流</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Random</span><span style="color:#24292E;--shiki-dark:#E06C75;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">ints</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">5</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">forEach</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">System</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">out</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">println)</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 随机</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 文件流需要 close</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Path</span><span style="color:#24292E;--shiki-dark:#E06C75;"> path </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Paths</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">get</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;file.txt&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">try</span><span style="color:#24292E;--shiki-dark:#E06C75;"> (</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> lines </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Files</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">lines</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(path)</span><span style="color:#24292E;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  lines</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">forEach</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">System</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">out</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">println);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">} </span><span style="color:#D73A49;--shiki-dark:#C678DD;">catch</span><span style="color:#24292E;--shiki-dark:#E06C75;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">IOException</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;"> e</span><span style="color:#24292E;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  e</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getStackTrace</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="处理-排序-合并-过滤" tabindex="-1"><a class="header-anchor" href="#处理-排序-合并-过滤"><span>处理：排序/合并/过滤</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 跳过/限制/过滤</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">skip</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">limit</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">20</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">filter</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 排序/去重</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">distinct</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">sorted</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Comparator</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">comparingInt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Stream</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">length).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">reversed</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 合并</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">concat</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(stream1, stream2)</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // [...stream1, ...stream2]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 转换</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">map</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // list -&gt; list</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">flatMap</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // list&lt;list&gt; -&gt; flat list</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mapToInt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 并行</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">parallel</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">parallelStream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="聚合" tabindex="-1"><a class="header-anchor" href="#聚合"><span>聚合</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 搜索</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">xxMatch</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">findXxx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 聚合（Aggregation）</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">count</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">max </span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">straem</span><span style="color:#24292E;--shiki-dark:#E06C75;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">max</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Comparator</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">comparingInt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Person</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">getAge))</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">min</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">average</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">sum</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// Collection</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">collection</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// -- toList / toSet</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// -- toMap</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// -- summary</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">IntSummaryStatistics</span><span style="color:#24292E;--shiki-dark:#E06C75;"> ageSummary </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> people</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collectors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">summarizingInt</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Person</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">getAge));</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">ageSummary</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getAverage</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">ageSummary</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getMax</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// -- of list</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> collect </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> people</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collector</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  () </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;(),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  (list, person) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// Accumulator：定义数据如何添加</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    list</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(person);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  (left, right) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// Combiner：定义两个流如何合并</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    left</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">addAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(right);</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> left;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  Collector</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Characteristics</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">IDENTITY_FINISH</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // Characteristics 特性：IDENTITY_FINISH=累加器结果作为最终结果，无需通过额外的Finisher完成器、CONCURRENT、UNORDERED</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// -- of map</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">HashMap</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> collect </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> people</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collector</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  HashMap</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::new</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  (map, person) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 合并同键</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    map</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">computeIfAbsent</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">person</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getCountry</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), ArrayList</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::new</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(person);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  (left, right) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 合并两个 map</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    right</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">forEach</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">((key, value) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> left</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">merge</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(key, value, (list1, list2) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        list1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">addAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(list2)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> list1;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">      }));</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">  Collector</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Characteristics</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">IDENTITY_FINISH</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 对结果进行操作，如： map -&gt; map.size() 返回 int</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// Iteration</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">forEach</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">reduce （Reduction） </span><span style="color:#24292E;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#E06C75;"> joinedName </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> people</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">map</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(Person</span><span style="color:#D73A49;--shiki-dark:#C678DD;">::</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">getName).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">reduce</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, (a, b) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> a </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;,&quot;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> b);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="并行-parallel" tabindex="-1"><a class="header-anchor" href="#并行-parallel"><span>并行（parallel）</span></a></h3><p>借助多核处理器的并行计算能力，加速数据处理，适合大型数据集或计算密集型任务。</p><p>工作流程：</p><ul><li>并行流在开始时，由 Spliterator 分割迭代器将数据分割成多个片段 <ul><li>分割过程一般采用递归方式动态进行，以平衡子任务的工作负载、提高资源利用率</li></ul></li><li>然后 ForkJoin 框架将这些数据片段分配到多个线程和处理器核心上进行并行处理</li><li>处理完成后，处理结果被汇总合并</li></ul><figure><img src="https://s2.loli.net/2024/06/30/j48CsFxPeWai9fZ.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#24292E;--shiki-dark:#C678DD;"> org.example.thread</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> lombok.extern.slf4j.Slf4j</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.function.Function</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.stream.Collectors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.stream.Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Assertions.assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Slf4j</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> CollectionParallelTest</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> testStreamParallel</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;ABCDE&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;B&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;C&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;D&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;E&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collectors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">joining</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()));</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;ABCDE&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;B&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;C&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;D&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;E&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">parallel</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collectors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">joining</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">())); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 并行但有序</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">            assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1A1B1C1D1E&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;B&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;C&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;D&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;E&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">parallel</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">map</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(s </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;1&quot;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> s).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collectors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">joining</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">())); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 并行但有序</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1A1B1C1D1E&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">Stream</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;B&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;C&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;D&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;E&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">parallel</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">map</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(s </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">            log</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">info</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(s); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 大概率非有序</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;1&quot;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> s;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        }).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">collect</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Collectors</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">joining</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()));</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="顺序-结果一致-问题" tabindex="-1"><a class="header-anchor" href="#顺序-结果一致-问题"><span>顺序（结果一致）问题</span></a></h4><p>很多时候我们担心并行流是否导致结果与预期不一致。 判断依据是：计算过程是否依赖元素的出现顺序。</p><p>e.g.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 不依赖出现顺序的聚合操作</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">max</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="color:#24292E;--shiki-dark:#E06C75;">min a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">add a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">average a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">count a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 不依赖出现顺序的处理操作</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">match</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="color:#24292E;--shiki-dark:#E06C75;">find a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">findFirst </span><span style="color:#D73A49;--shiki-dark:#C678DD;">?</span><span style="color:#24292E;--shiki-dark:#E06C75;"> 说是不影响</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">distinct a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">sorted a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 可能出现问题</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">forEach</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">reduce a</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="color:#24292E;--shiki-dark:#E06C75;">b </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">!=</span><span style="color:#24292E;--shiki-dark:#E06C75;"> b</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="color:#24292E;--shiki-dark:#E06C75;">a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="遍历时增删" tabindex="-1"><a class="header-anchor" href="#遍历时增删"><span>遍历时增删</span></a></h2><p>迭代器 fail-fast 快速失败机制：当迭代器发现（其他代码）增删后，便抛出异常 —— 保证迭代器的独立性和隔离性</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> list </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> ArrayList</span><span style="color:#24292E;--shiki-dark:#E06C75;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">list</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">Iterator</span><span style="color:#24292E;--shiki-dark:#E06C75;"> iterator </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> list</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">iterator</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">list</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;world&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 其他代码增删</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">iterator</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">next</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 抛出异常</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写入时复制（CopyOnWrite，COW） —— 希望迭代期间，能增删和读高性能</p>`,20);function y(E,F){const n=o("RouteLink");return p(),e("div",null,[c,d,s("ul",null,[s("li",null,[i(n,{to:"/zh/dev-java-commonsense/sdk-toolkit-guava.html"},{default:l(()=>[a("guava collections")]),_:1})]),B]),h,s("p",null,[a("参考 "),i(n,{to:"/zh/dev-java-commonsense/jdk-thread.html"},{default:l(()=>[a("link")]),_:1})])])}const C=r(k,[["render",y],["__file","jdk-collection.html.vue"]]),v=JSON.parse('{"path":"/zh/dev-java-commonsense/jdk-collection.html","title":"JDK 集合功能","lang":"zh-CN","frontmatter":{"title":"JDK 集合功能","date":"2024-06-28T00:00:00.000Z","tag":["java"],"order":66,"gitInclude":["../../../code/demo-java-thread/demo-01-simple/src/test/java/org/example/thread/CollectionParallelTest.java"],"description":"stream 参考： Java 中的流、并行流 - Java Stream API | Parallel Streams - https://www.bilibili.com/video/BV1Vi421C73n/ 创建 处理：排序/合并/过滤 聚合 并行（parallel） 借助多核处理器的并行计算能力，加速数据处理，适合大型数据集或计算密集型任务。...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-java-commonsense/jdk-collection.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"JDK 集合功能"}],["meta",{"property":"og:description","content":"stream 参考： Java 中的流、并行流 - Java Stream API | Parallel Streams - https://www.bilibili.com/video/BV1Vi421C73n/ 创建 处理：排序/合并/过滤 聚合 并行（parallel） 借助多核处理器的并行计算能力，加速数据处理，适合大型数据集或计算密集型任务。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2024/06/30/j48CsFxPeWai9fZ.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-05T21:33:08.000Z"}],["meta",{"property":"article:author","content":"Steven"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2024-06-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-05T21:33:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JDK 集合功能\\",\\"image\\":[\\"https://s2.loli.net/2024/06/30/j48CsFxPeWai9fZ.png\\"],\\"datePublished\\":\\"2024-06-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-05T21:33:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"stream","slug":"stream","link":"#stream","children":[{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]},{"level":3,"title":"处理：排序/合并/过滤","slug":"处理-排序-合并-过滤","link":"#处理-排序-合并-过滤","children":[]},{"level":3,"title":"聚合","slug":"聚合","link":"#聚合","children":[]},{"level":3,"title":"并行（parallel）","slug":"并行-parallel","link":"#并行-parallel","children":[]}]},{"level":2,"title":"遍历时增删","slug":"遍历时增删","link":"#遍历时增删","children":[]}],"git":{"createdTime":1719756512000,"updatedTime":1720215188000,"contributors":[{"name":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":2.58,"words":773},"filePathRelative":"zh/dev-java-commonsense/jdk-collection.md","localizedDate":"2024年6月28日","excerpt":"<h2>stream</h2>\\n<p>参考：</p>\\n<ul>\\n<li><a href=\\"/blog/zh/dev-java-commonsense/sdk-toolkit-guava.html\\" target=\\"_blank\\">guava collections</a></li>\\n<li>Java 中的流、并行流 - Java Stream API | Parallel Streams - https://www.bilibili.com/video/BV1Vi421C73n/</li>\\n</ul>\\n<h3>创建</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro\\" style=\\"background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\">// 创建</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">List</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">of</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">().</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Arrays</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">of</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">builder</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">().</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">add</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">()....</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">build</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">IntStream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">of</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\">// 生成/无限</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">iterate</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#005CC5;--shiki-dark:#D19A66\\">0</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">, n</span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">-&gt;</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">n</span><span style=\\"color:#D73A49;--shiki-dark:#56B6C2\\">&lt;=</span><span style=\\"color:#005CC5;--shiki-dark:#D19A66\\">10</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">, n</span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">-&gt;</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">n</span><span style=\\"color:#D73A49;--shiki-dark:#56B6C2\\">+</span><span style=\\"color:#005CC5;--shiki-dark:#D19A66\\">1</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">)</span><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\"> // 遍历</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">generate</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(() </span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">-&gt;</span><span style=\\"color:#032F62;--shiki-dark:#98C379\\"> \\"hello world\\"</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">).</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">limit</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#005CC5;--shiki-dark:#D19A66\\">5</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">)</span><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\"> // 无限生成，but limit 5</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">IntStream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">boxed</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">()</span><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\"> // 无限流</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">new</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\"> Random</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">()</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">ints</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#005CC5;--shiki-dark:#D19A66\\">5</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">).</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">forEach</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">System</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">out</span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">::</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">println)</span><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\"> // 随机</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic\\">// 文件流需要 close</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Path</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\"> path </span><span style=\\"color:#D73A49;--shiki-dark:#56B6C2\\">=</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\"> Paths</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">get</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#032F62;--shiki-dark:#98C379\\">\\"file.txt\\"</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">try</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\"> (</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">Stream</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"color:#D73A49;--shiki-dark:#E5C07B\\">String</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">&gt;</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\"> lines </span><span style=\\"color:#D73A49;--shiki-dark:#56B6C2\\">=</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\"> Files</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">lines</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(path)</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">  lines</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">forEach</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">System</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">out</span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">::</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">println);</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">} </span><span style=\\"color:#D73A49;--shiki-dark:#C678DD\\">catch</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">(</span><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">IOException</span><span style=\\"color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic\\"> e</span><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E5C07B\\">  e</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"color:#6F42C1;--shiki-dark:#61AFEF\\">getStackTrace</span><span style=\\"color:#24292E;--shiki-dark:#ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"color:#24292E;--shiki-dark:#E06C75\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{C as comp,v as data};
