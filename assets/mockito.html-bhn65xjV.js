import{_ as t,r,o as c,c as d,a as B,b as e,w as i,d as s,f as o,e as a}from"./app-KEqG5N5G.js";const h={},y=s("p",null,"Mockito 是 Java 的模拟测试框架，通过 Mockito 可以创建和配置 Mock 对象，简化外部依赖的类的测试。",-1),E=o(`<div class="language-xml line-numbers-mode" data-ext="xml" data-title="pom.xml"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;org.junit.jupiter&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;junit-jupiter-engine&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">version</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;5.10.1&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">version</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">scope</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">scope</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;org.mockito&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;mockito-core&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">version</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;5.7.0&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">version</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="color:#22863A;--shiki-dark:#E06C75;">scope</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">scope</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="color:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h2>`,2),A=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro",style:{"background-color":"#fff","--shiki-dark-bg":"#282c34",color:"#24292e","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"package"),s("span",{style:{color:"#24292E","--shiki-dark":"#C678DD"}}," org.example"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.example.service.UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.Test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.extension.ExtendWith"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Mock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Spy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.junit.jupiter.MockitoExtension"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"@"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"ExtendWith"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"MockitoExtension"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"class"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"public"),s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}}," class"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#E5C07B"}}," Init01Test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Mock"),s("span",{style:{color:"#6A737D","--shiki-dark":"#7F848E","font-style":"inherit","--shiki-dark-font-style":"italic"}}," // @InjectMocks —— 前者不调用实际方法，后者调用实际方法")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    private"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}}," mockUserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Spy")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    private"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}}," spyUserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Test")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    void"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}}," test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(mockUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isMock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"());")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertFalse"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(mockUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isSpy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()); "),s("span",{style:{color:"#6A737D","--shiki-dark":"#7F848E","font-style":"inherit","--shiki-dark-font-style":"italic"}},"// 💡 mock is not spy —— mock 实际为空调用，而 spy 需要监听实际方法调用，因此冲突")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(spyUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isSpy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"());")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(spyUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isMock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()); "),s("span",{style:{color:"#6A737D","--shiki-dark":"#7F848E","font-style":"inherit","--shiki-dark-font-style":"italic"}},"// 💡 spy is mock —— 在 spy 监听实际方法调用的同时，提供 mock 改变返回值的功能！")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"}")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),F=s("div",{class:"language-xml line-numbers-mode","data-ext":"xml","data-title":"pom.xml"},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro",style:{"background-color":"#fff","--shiki-dark-bg":"#282c34",color:"#24292e","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#6A737D","--shiki-dark":"#7F848E","font-style":"inherit","--shiki-dark-font-style":"italic"}},"<!-- 提供 MockitoExtension.class 对象 -->")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"<"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"dependency"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    <"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"groupId"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">org.mockito</"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"groupId"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    <"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"artifactId"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">mockito-junit-jupiter</"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"artifactId"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    <"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"version"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">5.7.0</"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"version"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    <"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"scope"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">test</"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"scope"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"</"),s("span",{style:{color:"#22863A","--shiki-dark":"#E06C75"}},"dependency"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},">")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),v=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro",style:{"background-color":"#fff","--shiki-dark-bg":"#282c34",color:"#24292e","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"package"),s("span",{style:{color:"#24292E","--shiki-dark":"#C678DD"}}," org.example"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.example.service.UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.BeforeEach"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.Test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Mock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.MockitoAnnotations"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Spy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"public"),s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}}," class"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#E5C07B"}}," Init02Test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Mock")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    private"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}}," mockUserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Spy")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    private"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}}," spyUserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"BeforeEach")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    void"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}}," beforeEach"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        MockitoAnnotations"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"openMocks"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#005CC5","--shiki-dark":"#E5C07B"}},"this"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Test")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    void"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}}," test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(mockUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isMock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"());")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(spyUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isSpy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"());")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"}")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),C=s("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[s("pre",{class:"shiki shiki-themes github-light one-dark-pro",style:{"background-color":"#fff","--shiki-dark-bg":"#282c34",color:"#24292e","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"package"),s("span",{style:{color:"#24292E","--shiki-dark":"#C678DD"}}," org.example"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.example.service.UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.BeforeEach"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.junit.jupiter.api.Test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"import"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," org.mockito.Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"public"),s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}}," class"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#E5C07B"}}," Init03Test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    private"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}}," mockUserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    private"),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#E06C75"}}," spyUserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"BeforeEach")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    public"),s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}}," void"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}}," beforeEach"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"        mockUserService "),s("span",{style:{color:"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"class"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"        spyUserService "),s("span",{style:{color:"#D73A49","--shiki-dark":"#56B6C2"}},"="),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}}," Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"spy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"UserService"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"class"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},");")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    @"),s("span",{style:{color:"#D73A49","--shiki-dark":"#E5C07B"}},"Test")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#D73A49","--shiki-dark":"#C678DD"}},"    void"),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}}," test"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"()"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(mockUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isMock"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"());")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"        Assertions"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"assertTrue"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"("),s("span",{style:{color:"#24292E","--shiki-dark":"#E5C07B"}},"Mockito"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"mockingDetails"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"(spyUserService)."),s("span",{style:{color:"#6F42C1","--shiki-dark":"#61AFEF"}},"isSpy"),s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"());")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"    }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#24292E","--shiki-dark":"#ABB2BF"}},"}")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),D=o(`<div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>Mock —— 从类型创建，不调用实际方法</li><li>Spy —— 对现有实例的封装，调用被封装实例的实际方法</li></ul></div><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用"><span>基本使用</span></a></h2><ul><li>Mock —— 根据类名创建一个 “空对象”，可以对其返回值进行定制，若无定制返回默认值</li><li>Spy —— 根据实际对象创建一个 “代理对象”，</li><li>Captor —— 捕获传入的参数值</li><li>InjectMock —— 自动注入相关引用</li></ul><h3 id="mock" tabindex="-1"><a class="header-anchor" href="#mock"><span>mock</span></a></h3><p>对于一个 mock 对象，我们可以指定返回值和执行特定的动作。 当然，也可以不指定。</p><p>如果不指定返回值的话，一个 mock 对象的所有非 void 方法都将返回默认值：</p><ul><li>int、long 类型方法将返回 0</li><li>boolean 方法将返回 false</li><li>对象方法将返回 null 等等</li></ul><p>而 void 方法将什么都不做。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#24292E;--shiki-dark:#C678DD;"> org.example</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.example.entity.UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.example.service.UserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.extension.ExtendWith</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.function.Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.exceptions.misusing.UnnecessaryStubbingException</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.junit.jupiter.MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.stubbing.Answer</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.ArgumentMatchers.any</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito.</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> * 模拟返回结果/抛出异常</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">ExtendWith</span><span style="color:#24292E;--shiki-dark:#E06C75;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Mock01Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Mock</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#24292E;--shiki-dark:#E06C75;"> mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 测试 when 的 thenReturn 方法</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 💡调用多个 thenReturn 时，会按顺序返回</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_when_thenReturn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#24292E;--shiki-dark:#E06C75;">returnUserAll01</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#24292E;--shiki-dark:#E06C75;">returnUserAll02</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        when</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">thenReturn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(returnUserAll01).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">thenReturn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(returnUserAll02); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 顺序返回</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertArrayEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">returnUserAll01</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), </span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertArrayEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">returnUserAll02</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), </span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertArrayEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">returnUserAll02</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), </span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 返回最后一个 thenReturn 设定</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 另一种写法</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_when_thenReturn_2</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#24292E;--shiki-dark:#E06C75;">returnUserAll01</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        doReturn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(returnUserAll01).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">when</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(mockUserService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertArrayEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">returnUserAll01</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), </span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * ⚠️定义了 when 就要调用，否则抛异常 {@link UnnecessaryStubbingException}</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * ⚠️如果确定方法 mock 后不调用，一种处理方法是使用 lenient() 提供的方法进行 mock</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 💡另一种方法是在 mock 环境建立前设置宽松的 mock 行为： Mockito.mockitoSession().initMocks(this).strictness(Strictness.STRICT_STUBS).startMocking();</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_UnnecessaryStubbingException_lenient</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        // ↓ or @Mock(lenient = true)</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        lenient</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">when</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">thenReturn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;()); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// this won&#39;t get called</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 动态返回</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_thenAnswer</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        UserDTO</span><span style="color:#24292E;--shiki-dark:#E06C75;"> param</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        when</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">any</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">))).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">thenAnswer</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">((</span><span style="color:#24292E;--shiki-dark:#E5C07B;">Answer</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#24292E;--shiki-dark:#E5C07B;">List</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">UserDTO</span><span style="color:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">) invocation </span><span style="color:#D73A49;--shiki-dark:#C678DD;">-&gt;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">            UserDTO</span><span style="color:#24292E;--shiki-dark:#E06C75;"> argument</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> invocation</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getArgument</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(argument); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 💡运行时获取传入参数（而不是 when 时就指定）</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertArrayEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">of</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(param).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(), </span><span style="color:#24292E;--shiki-dark:#E5C07B;">mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(param).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">toArray</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 模拟异常抛出</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_doThrow</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        doThrow</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">ArithmeticException</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">when</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(mockUserService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertThrows</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">RuntimeException</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> throws</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Throwable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">                mockUserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spy" tabindex="-1"><a class="header-anchor" href="#spy"><span>spy</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#24292E;--shiki-dark:#C678DD;"> org.example</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.example.service.UserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.extension.ExtendWith</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.function.Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.exceptions.verification.WantedButNotInvoked</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.junit.jupiter.MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito.mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito.verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">ExtendWith</span><span style="color:#24292E;--shiki-dark:#E06C75;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Spy01Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Spy</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#24292E;--shiki-dark:#E06C75;"> userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_spy_is_mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertTrue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">isMock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 既是 spy 也是 mock</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertTrue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">isSpy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 测试 verify 抛出异常的情况</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertThrows</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">WantedButNotInvoked</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> throws</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Throwable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">                verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 校验发现方法未被调用（至少一次），则抛出异常</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">                // verify(userService, times(1)).getUserAll(); // 等价 ↑</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 调用后再校验，则不报错</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 测试 spy 的实例与 spy 是否关联</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_instance_change</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#24292E;--shiki-dark:#E06C75;">list</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt; </span><span style="color:#24292E;--shiki-dark:#E06C75;">spy</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Mockito</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(list);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">list</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// spy 与实例并不关联，相互独立</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="captor" tabindex="-1"><a class="header-anchor" href="#captor"><span>captor</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#24292E;--shiki-dark:#C678DD;"> org.example</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.example.entity.UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.example.service.UserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.extension.ExtendWith</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.junit.jupiter.MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito.</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">ExtendWith</span><span style="color:#24292E;--shiki-dark:#E06C75;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> Captor01Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Mock</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#24292E;--shiki-dark:#E06C75;"> userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Captor</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    ArgumentCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> argCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_when_capture</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        when</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">argCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">capture</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">())).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">thenReturn</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">null</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        UserDTO</span><span style="color:#24292E;--shiki-dark:#E06C75;"> userDTO</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertNull</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userDTO));</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userDTO, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">argCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getValue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_verify_capture</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        UserDTO</span><span style="color:#24292E;--shiki-dark:#E06C75;"> userDTO</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> UserDTO</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userDTO);</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService, </span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">times</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">)).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">argCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">capture</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userDTO, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">argCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getValue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="区别-mock-spy-captor-injectmock" tabindex="-1"><a class="header-anchor" href="#区别-mock-spy-captor-injectmock"><span>区别 @Mock/@Spy/@Captor/@InjectMock</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#24292E;--shiki-dark:#C678DD;"> org.example</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.extension.ExtendWith</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.junit.jupiter.MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> java.util.List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito.</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> * 区分 @Mock、@Spy、@Captor、@InjectMock</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">ExtendWith</span><span style="color:#24292E;--shiki-dark:#E06C75;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> DiffTypesTest</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Mock</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Spy</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> spyNoInstance</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 💡如果没有实例化，则退化成 mock （即不调用实际方法）</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Spy</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> spy </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> ArrayList</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Captor</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> ArgumentCaptor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> captor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // 用于获取入参</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * 自动注入相关引用</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">InjectMocks</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> InjectMockClass</span><span style="color:#24292E;--shiki-dark:#E06C75;"> injectMockClass </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> InjectMockClass</span><span style="color:#24292E;--shiki-dark:#E06C75;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * \\@Mock 不实际调用方法</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_mock_do_nothing</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * \\@Spy 实际调用方法</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_spy_do_exactly</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        spyNoInstance</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">0</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">spyNoInstance</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_captor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(spy).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">add</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">captor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">capture</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">size</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">captor</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getValue</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     * \\@InjectMock 注入相关 @Mock/@Spy 进入对象属性中</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_injectMock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">        // 自动注入相关属性</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(mock, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">injectMockClass</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(spy, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">injectMockClass</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertFalse</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(injectMockClass).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">isMock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 被注入属性的对象默认不是 Mock</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertEquals</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#005CC5;--shiki-dark:#D19A66;">1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#24292E;--shiki-dark:#E5C07B;">injectMockClass</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">doSomething</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 实际执行方法</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> InjectMockClass</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> List</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">&gt;</span><span style="color:#24292E;--shiki-dark:#E06C75;"> spy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        int</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> doSomething</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verify" tabindex="-1"><a class="header-anchor" href="#verify"><span>verify</span></a></h3><p>通过 verify 来判断方法内部实现是否符合预想。</p><p>通过对 <code>verify(T mock)</code>/<code>verify(T mock, VerificationMode mode)</code> 的返回值的方法调用，验证某些行为是否至少发生过一次/确切的次数/从未发生过。</p><table><thead><tr><th>方法调用次数校验</th><th>说明</th></tr></thead><tbody><tr><td><code>times(int wantedNumberOfInvocations)</code></td><td>允许验证调用的确切次数。</td></tr><tr><td><code>atLeast(int minNumberOfInvocations)</code></td><td>允许至少 x 次调用的验证。</td></tr><tr><td><code>atMost(int maxNumberOfInvocations)</code></td><td>允许最多 x 次调用的验证。</td></tr><tr><td><code>atLeastOnce()</code></td><td>允许至少一次调用的验证。</td></tr><tr><td><code>atMostOnce()</code></td><td>允许最多一次调用的验证。</td></tr><tr><td><code>never()</code></td><td>times(0)的别名，见 times(int) 。</td></tr><tr><td><code>only()</code></td><td>允许检查给定的方法是否只调用一次。</td></tr></tbody></table><table><thead><tr><th>类是否被调用校验</th><th>说明</th></tr></thead><tbody><tr><td><code>verifyNoInteractions(Object... mocks)</code></td><td>验证给定的 mock 对象上没有发生交互。</td></tr><tr><td><code>verifyNoMoreInteractions(Object... mocks)</code></td><td>检查任何给定的 mock 对象上是否有任何未经验证的交互。</td></tr><tr><td><code>validateMockitoUsage()</code></td><td>验证测试代码中是否有书写错误的地方。如是否有漏写 return、verifyMethod 等等。</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">package</span><span style="color:#24292E;--shiki-dark:#C678DD;"> org.example</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.example.service.UserService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.extension.ExtendWith</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.function.Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.InjectMocks</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.exceptions.misusing.UnfinishedVerificationException</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.exceptions.verification.NoInteractionsWanted</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.junit.jupiter.MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> org.mockito.Mockito.</span><span style="color:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">ExtendWith</span><span style="color:#24292E;--shiki-dark:#E06C75;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">MockitoExtension</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> VerifyTest</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Mock</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#24292E;--shiki-dark:#E06C75;"> userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">InjectMocks</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> MyTester</span><span style="color:#24292E;--shiki-dark:#E06C75;"> myTester</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_verifyNoInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verifyNoInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 通过，因为无调用 userService</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        myTester</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">doSomething</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertThrowsExactly</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">NoInteractionsWanted</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> throws</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Throwable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">                verifyNoInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 异常，因为 myTester 内部调用 userService</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertThrowsExactly</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">NoInteractionsWanted</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> throws</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Throwable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">                verifyNoInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 异常，因为判断的是 “是否有被调用过”</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_verifyNoMoreInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verifyNoMoreInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 通过，因为无调用 userService</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        myTester</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">doSomething</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertThrowsExactly</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">NoInteractionsWanted</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> throws</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Throwable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">                verifyNoMoreInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 异常，因为 myTester 内部调用 userService</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verifyNoMoreInteractions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 通过，因为判断的是 “是否没有更多异常” 了</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> test_validateMockitoUsage</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">        verify</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(userService);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">        Assertions</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">assertThrowsExactly</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E5C07B;">UnfinishedVerificationException</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#24292E;--shiki-dark:#E5C07B;">class</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#D73A49;--shiki-dark:#C678DD;">new</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> Executable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">            public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> throws</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> Throwable</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">                validateMockitoUsage</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(); </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// 异常，因为 verify 没有方法调用</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="color:#6F42C1;--shiki-dark:#E5C07B;"> MyTester</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        private</span><span style="color:#24292E;--shiki-dark:#E5C07B;"> UserService</span><span style="color:#24292E;--shiki-dark:#E06C75;"> userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">        void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> doSomething</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">            userService</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">getUserAll</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>todo 原理</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  @</span><span style="color:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">  public</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> testInit</span><span style="color:#24292E;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    Mockito</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(mockUserService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">isMock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    Mockito</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(spyUserService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">isSpy</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E5C07B;">    Mockito</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">mockingDetails</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(spyUserService).</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;">isMock</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">();</span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;"> // true —— ❗Spy是Mock的子类</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function m(u,b){const p=r("SiteInfo"),k=r("Tabs");return c(),d("div",null,[y,B(" more "),e(p,{name:"Mocikto 教程",url:"https://baeldung-cn.com/mockito-series",preview:"/assets/images/cover3.jpg"}),E,e(k,{id:"9",data:[{id:"注解 + ExtendWith"},{id:"注释 + BeforeEach"},{id:"手动初始化"}]},{title0:i(({value:n,isActive:l})=>[a("注解 + ExtendWith")]),title1:i(({value:n,isActive:l})=>[a("注释 + BeforeEach")]),title2:i(({value:n,isActive:l})=>[a("手动初始化")]),tab0:i(({value:n,isActive:l})=>[A,F]),tab1:i(({value:n,isActive:l})=>[v]),tab2:i(({value:n,isActive:l})=>[C]),_:1}),D])}const f=t(h,[["render",m],["__file","mockito.html.vue"]]),j=JSON.parse('{"path":"/zh/dev-java-test/mockito.html","title":"Mockito 使用","lang":"zh-CN","frontmatter":{"title":"Mockito 使用","date":"2024-04-24T00:00:00.000Z","tag":["java","test"],"order":33,"gitInclude":["../../../code/demo-java-test/usage-mockito/src/test/java/org/example/Init01Test.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/Init02Test.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/Init03Test.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/Mock01Test.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/Spy01Test.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/Captor01Test.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/DiffTypesTest.java","../../../code/demo-java-test/usage-mockito/src/test/java/org/example/VerifyTest.java"],"description":"Mockito 是 Java 的模拟测试框架，通过 Mockito 可以创建和配置 Mock 对象，简化外部依赖的类的测试。","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-java-test/mockito.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"Mockito 使用"}],["meta",{"property":"og:description","content":"Mockito 是 Java 的模拟测试框架，通过 Mockito 可以创建和配置 Mock 对象，简化外部依赖的类的测试。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T11:01:03.000Z"}],["meta",{"property":"article:author","content":"Steven"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:published_time","content":"2024-04-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T11:01:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mockito 使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T11:01:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":2,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[{"level":3,"title":"mock","slug":"mock","link":"#mock","children":[]},{"level":3,"title":"spy","slug":"spy","link":"#spy","children":[]},{"level":3,"title":"captor","slug":"captor","link":"#captor","children":[]},{"level":3,"title":"区别 @Mock/@Spy/@Captor/@InjectMock","slug":"区别-mock-spy-captor-injectmock","link":"#区别-mock-spy-captor-injectmock","children":[]},{"level":3,"title":"verify","slug":"verify","link":"#verify","children":[]}]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]}],"git":{"createdTime":1714215663000,"updatedTime":1714215663000,"contributors":[{"name":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.25,"words":675},"filePathRelative":"zh/dev-java-test/mockito.md","localizedDate":"2024年4月24日","excerpt":"<p>Mockito 是 Java 的模拟测试框架，通过 Mockito 可以创建和配置 Mock 对象，简化外部依赖的类的测试。</p>\\n","autoDesc":true}');export{f as comp,j as data};
