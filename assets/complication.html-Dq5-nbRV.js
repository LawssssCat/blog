import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as l}from"./app-oFg32QKK.js";const e={};function t(h,s){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="语言结构" tabindex="-1"><a class="header-anchor" href="#语言结构"><span>语言结构</span></a></h2><p>参考：</p><ul><li>标准库文档 —— <a href="https://doc.rust-lang.org/stable/std/index.html" target="_blank" rel="noopener noreferrer">https://doc.rust-lang.org/stable/std/index.html</a></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通过<a href="https://github.com/rust-lang/rust" target="_blank" rel="noopener noreferrer">Rust 源码仓库</a>结构可以了解到：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">compiler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rust</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 编译器，已实现自构建</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">library</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 编译单元（crate）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 核心库，如基本类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  std</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 标准库，在核心库基础上扩展通用功能</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> （嵌入式底层开发使用core库，其余场景一般用std库足够）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  alloc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 内存分配相关</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="编译过程" tabindex="-1"><a class="header-anchor" href="#编译过程"><span>编译过程</span></a></h2><p>了解目的：理解 “宏（macros）”</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 构建步骤：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 1、编译前端阶段（实现：RustC/gcc-rust(开发中，2022年)） —— 该阶段人类可读</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//     + Token —— 处理宏</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//     + AST（抽象语法树） —— 类型检查、...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//     + HIR（高级中间语言） —— 借用检查、代码优化/生成、...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//     + MIR（中级中间语言）（CFG，控制流图） —— （一般静态检查在该阶段进行，如使用Miri工具进行unsafe代码安全检查）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//     + LLVM IR</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 2、编译后端阶段（实现：LLVM(for release)/gcc(for release)/Cranelift(for debug)） —— 汇编</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//     + LLVM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;你好，🦀&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><h3 id="cargo介绍" tabindex="-1"><a class="header-anchor" href="#cargo介绍"><span>Cargo介绍</span></a></h3><p>编译单元： crate —— 编译单元，由编译项目中 <code>./Cargo.toml</code> 文件定义。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rustc-main&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">edition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2021&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件：</p><ul><li><code>cargo-clippy</code> —— 代码静态分析（lint）</li><li><code>cargo-vet</code> —— 为开发者建立工作流，标记crate是否可信，保障供应链安全</li></ul><h3 id="lemmeknow-简单小项目" tabindex="-1"><a class="header-anchor" href="#lemmeknow-简单小项目"><span>lemmeknow（简单小项目）</span></a></h3><p>参考<a href="https://github.com/swanandx/lemmeknow" target="_blank" rel="noopener noreferrer">lemmeknow</a>项目的最佳实践</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">src/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  data/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 处理数据功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  identifier/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 处理匹配功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  output/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 处理输出功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  lib.rs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 对外接口，集成上述“功能”</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  main.rs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cli入口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tests/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 测试代码，调用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src/lib.rs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 进行测试</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">build.rs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 构建脚本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cargo.toml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 项目</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> crate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 定义</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种小项目，在项目配置中指定各目录的划分：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lemmeknow&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.8.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">edition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2021&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lemmeknow&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/lib.rs&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">crate-type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cli&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cli</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;comfy-table&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;clap&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lemmeknow&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/main.rs&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">required-features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cli&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rust本体-sdk项目" tabindex="-1"><a class="header-anchor" href="#rust本体-sdk项目"><span>rust本体（SDK项目）</span></a></h3><p>参考<a href="https://github.com/rust-lang/rust" target="_blank" rel="noopener noreferrer">rust本体</a>项目的最佳实践</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">compiler/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 编译器源码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  rustc/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 最小业务单元：编译器cli入口源码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    src/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      main.rs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 编译器源码入口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    build.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">library/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 核心库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  core/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 核心库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  std/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 标准库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  alloc/</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">src/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 外围工具</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  bootstrap/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ci/</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cargo.toml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种大项目，其 crate 在项目配置中使用 <code>workspace</code> 关键字管理：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">workspace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">members</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;compiler/rustc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;library/std&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;library/test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wasmtime-sdk项目" tabindex="-1"><a class="header-anchor" href="#wasmtime-sdk项目"><span>wasmtime（SDK项目）</span></a></h3><p>参考<a href="https://github.com/bytecodealliance/wasmtime" target="_blank" rel="noopener noreferrer">wasmtime</a>项目的最佳实践</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cranelift/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 主体，编译后端</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crates/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  cache/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 提供缓存功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  cranelift/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 提供主体对外暴露功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  runtime/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 提供运行时功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">src/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  bin/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    wasmtime.ts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 入口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  commands/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 其他cli命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    compile.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    run.rs</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    ...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">scripts/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 构建脚本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tests/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 单元测试</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fuzz/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 模糊测试</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">supply-chain/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 供应链说明</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">examples/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docs/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 说明文档</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cargo.toml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>workspace</code> 关键字定义组件：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">workspace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">resolver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;2&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">members</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;cranelift&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;cranelift/egraph&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;cranelift/isle/fuzz&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;fuzz&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rust-for-linux-混合项目" tabindex="-1"><a class="header-anchor" href="#rust-for-linux-混合项目"><span>Rust for Linux （混合项目）</span></a></h3><p>参考<a href="https://github.com/Rust-for-Linux/linux" target="_blank" rel="noopener noreferrer">Rust-for-Linux</a>项目的最佳实践</p><p>该项目主要是c项目，通过makefile进行统一编译。在这基础上增加rust代码实现的功能。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kernel/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rust/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  bindings/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  macros/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  kernel/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  helpers/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    clk.c</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ffi.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  Makefile</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Makefile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tauri-gui项目" tabindex="-1"><a class="header-anchor" href="#tauri-gui项目"><span>tauri （GUI项目）</span></a></h3><p>参考<a href="https://github.com/tauri-apps/tauri" target="_blank" rel="noopener noreferrer">tauri</a>项目的最佳实践</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">core/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tauri-build/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 构建</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tauri-codegen/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 代码生成</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tauri-macros/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tauri-runtime/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 运行时</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tauri-utils/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  tauri/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    script/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    src/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    test/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tools/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 跨平台工具</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slint-gui项目" tabindex="-1"><a class="header-anchor" href="#slint-gui项目"><span>slint （GUI项目）</span></a></h3><p>参考<a href="https://github.com/slint-ui/slint" target="_blank" rel="noopener noreferrer">slint</a>项目的最佳实践</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">internal/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  common/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  compiler/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  core/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    graphics/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">api/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 对外</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">js/ts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">暴露的接口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38)])])}const r=i(e,[["render",t]]),d=JSON.parse('{"path":"/zh/dev-rust-commonsense/complication.html","title":"Rust 编译原理（入门）、项目结构","lang":"zh-CN","frontmatter":{"title":"Rust 编译原理（入门）、项目结构","order":99,"description":"语言结构 参考： 标准库文档 —— https://doc.rust-lang.org/stable/std/index.html 提示 通过Rust 源码仓库结构可以了解到： 编译过程 了解目的：理解 “宏（macros）” 项目结构 Cargo介绍 编译单元： crate —— 编译单元，由编译项目中 ./Cargo.toml 文件定义。 插件： ...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-rust-commonsense/complication.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"Rust 编译原理（入门）、项目结构"}],["meta",{"property":"og:description","content":"语言结构 参考： 标准库文档 —— https://doc.rust-lang.org/stable/std/index.html 提示 通过Rust 源码仓库结构可以了解到： 编译过程 了解目的：理解 “宏（macros）” 项目结构 Cargo介绍 编译单元： crate —— 编译单元，由编译项目中 ./Cargo.toml 文件定义。 插件： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-23T09:03:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-23T09:03:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Rust 编译原理（入门）、项目结构\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-23T09:03:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"语言结构","slug":"语言结构","link":"#语言结构","children":[]},{"level":2,"title":"编译过程","slug":"编译过程","link":"#编译过程","children":[]},{"level":2,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[{"level":3,"title":"Cargo介绍","slug":"cargo介绍","link":"#cargo介绍","children":[]},{"level":3,"title":"lemmeknow（简单小项目）","slug":"lemmeknow-简单小项目","link":"#lemmeknow-简单小项目","children":[]},{"level":3,"title":"rust本体（SDK项目）","slug":"rust本体-sdk项目","link":"#rust本体-sdk项目","children":[]},{"level":3,"title":"wasmtime（SDK项目）","slug":"wasmtime-sdk项目","link":"#wasmtime-sdk项目","children":[]},{"level":3,"title":"Rust for Linux （混合项目）","slug":"rust-for-linux-混合项目","link":"#rust-for-linux-混合项目","children":[]},{"level":3,"title":"tauri （GUI项目）","slug":"tauri-gui项目","link":"#tauri-gui项目","children":[]},{"level":3,"title":"slint （GUI项目）","slug":"slint-gui项目","link":"#slint-gui项目","children":[]}]}],"git":{"createdTime":1755422391000,"updatedTime":1755939810000,"contributors":[{"name":"lawsssscat","username":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":2,"url":"https://github.com/lawsssscat"}]},"readingTime":{"minutes":2.82,"words":847},"filePathRelative":"zh/dev-rust-commonsense/complication.md","localizedDate":"2025年8月17日","excerpt":"<h2>语言结构</h2>\\n<p>参考：</p>\\n<ul>\\n<li>标准库文档 —— <a href=\\"https://doc.rust-lang.org/stable/std/index.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://doc.rust-lang.org/stable/std/index.html</a></li>\\n</ul>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>通过<a href=\\"https://github.com/rust-lang/rust\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Rust 源码仓库</a>结构可以了解到：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">compiler</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ——</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> rust</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 编译器，已实现自构建</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">library</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ——</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 编译单元（crate）</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  core</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ——</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 核心库，如基本类型</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  std</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ——</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 标准库，在核心库基础上扩展通用功能</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> （嵌入式底层开发使用core库，其余场景一般用std库足够）</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  alloc</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ——</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 内存分配相关</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">  ...</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></div>","autoDesc":true}');export{r as comp,d as data};
