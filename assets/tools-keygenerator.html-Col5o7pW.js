import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as l}from"./app-yV4LJ0US.js";const t={};function n(r,i){return l(),a("div",null,[...i[0]||(i[0]=[e(`<h2 id="uuid" tabindex="-1"><a class="header-anchor" href="#uuid"><span>UUID</span></a></h2><p>问题：</p><ul><li>非自增 —— 不方便数据库索引（插入时，B 树频繁重建） 【主要问题】</li><li>长度大 【非主要问题】</li><li>有概率冲突 【非主要问题】</li></ul><h2 id="数据库自增" tabindex="-1"><a class="header-anchor" href="#数据库自增"><span>数据库自增</span></a></h2><ul><li>todo Mybatis 主键生成</li></ul><p>问题：</p><ul><li>分库分表场景可能导致重复 ID</li></ul><h3 id="思路-在唯一的表中统一管理主键" tabindex="-1"><a class="header-anchor" href="#思路-在唯一的表中统一管理主键"><span>思路： 在唯一的表中统一管理主键</span></a></h3><p>一致性： 在唯一的表中统一管理主键</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">REPLACE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> test_order_id (stub) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;b&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> LAST_INSERT_ID();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMIT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>高并发： 按资源数量设置增量</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1,3,5,7,9,...</span></span>
<span class="line"><span>2,4,6,8,10,...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>可扩展： 问题</p><h3 id="思路-美团-leaf" tabindex="-1"><a class="header-anchor" href="#思路-美团-leaf"><span>思路： 美团 Leaf</span></a></h3><p>github: Meituan-Dianping/Leaf</p><p>分布式服务，每个服务一次拿 1000 个主键</p><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h2><p>todo</p><h2 id="雪花算法-snowflake" tabindex="-1"><a class="header-anchor" href="#雪花算法-snowflake"><span>雪花算法（snowflake）</span></a></h2><p>Snowflake（雪花算法）是由 Twitter 开源的分布式 ID 生成算法，以划分命名空间的方式将 64-bit 位分割成多个部分，每个部分代表不同的含义。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Java 中 64bit 的整数是 Long 类型，所以在 Java 中用 long 来存储雪花算法生成的 ID。</p></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1bit，表示正负             41bit，时间戳            10bit，工作机器id   12bit，序列号</span></span>
<span class="line"><span>|                              |                        |              |</span></span>
<span class="line"><span>0 - 00000000 00000000 00000000 00000000 00000000 0 - 00000000 00 - 00000000 0000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题：</p><ul><li>时间回拨问题处理</li></ul><p>实现参考：</p><ul><li>UniversalIdGenerator <ul><li>https://github.com/NationalSecurityAgency/ghidra/blob/master/Ghidra/Framework/Generic/src/main/java/ghidra/util/UniversalIdGenerator.java</li></ul></li><li>IdWorker <ul><li>https://github.com/zzxadi/Snowflake-IdWorker/blob/master/IdWorker.java</li><li>https://github.com/sail-y/spring-boot-admin/blob/master/src/main/java/com/dmc/util/id/IdWorker.java</li><li>https://github.com/sumory/uc/blob/master/src/com/sumory/uc/id/IdWorker.java</li></ul></li></ul>`,26)])])}const p=s(t,[["render",n]]),o=JSON.parse(`{"path":"/zh/dev-java-crud/tools-keygenerator.html","title":"统一主键生成器","lang":"zh-CN","frontmatter":{"title":"统一主键生成器","date":"2024-09-14T00:00:00.000Z","tag":["java","jdbc"],"order":66,"description":"UUID 问题： 非自增 —— 不方便数据库索引（插入时，B 树频繁重建） 【主要问题】 长度大 【非主要问题】 有概率冲突 【非主要问题】 数据库自增 todo Mybatis 主键生成 问题： 分库分表场景可能导致重复 ID 思路： 在唯一的表中统一管理主键 一致性： 在唯一的表中统一管理主键 高并发： 按资源数量设置增量 可扩展： 问题 思路： ...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-java-crud/tools-keygenerator.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"统一主键生成器"}],["meta",{"property":"og:description","content":"UUID 问题： 非自增 —— 不方便数据库索引（插入时，B 树频繁重建） 【主要问题】 长度大 【非主要问题】 有概率冲突 【非主要问题】 数据库自增 todo Mybatis 主键生成 问题： 分库分表场景可能导致重复 ID 思路： 在唯一的表中统一管理主键 一致性： 在唯一的表中统一管理主键 高并发： 按资源数量设置增量 可扩展： 问题 思路： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-15T10:17:27.000Z"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdbc"}],["meta",{"property":"article:published_time","content":"2024-09-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-15T10:17:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"统一主键生成器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-15T10:17:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"UUID","slug":"uuid","link":"#uuid","children":[]},{"level":2,"title":"数据库自增","slug":"数据库自增","link":"#数据库自增","children":[{"level":3,"title":"思路： 在唯一的表中统一管理主键","slug":"思路-在唯一的表中统一管理主键","link":"#思路-在唯一的表中统一管理主键","children":[]},{"level":3,"title":"思路： 美团 Leaf","slug":"思路-美团-leaf","link":"#思路-美团-leaf","children":[]}]},{"level":2,"title":"Redis","slug":"redis","link":"#redis","children":[]},{"level":2,"title":"雪花算法（snowflake）","slug":"雪花算法-snowflake","link":"#雪花算法-snowflake","children":[]}],"git":{"createdTime":1734257847000,"updatedTime":1734257847000,"contributors":[{"name":"lawsssscat","username":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":1,"url":"https://github.com/lawsssscat"}]},"readingTime":{"minutes":1.09,"words":326},"filePathRelative":"zh/dev-java-crud/tools-keygenerator.md","localizedDate":"2024年9月14日","excerpt":"<h2>UUID</h2>\\n<p>问题：</p>\\n<ul>\\n<li>非自增 —— 不方便数据库索引（插入时，B 树频繁重建） 【主要问题】</li>\\n<li>长度大 【非主要问题】</li>\\n<li>有概率冲突 【非主要问题】</li>\\n</ul>\\n<h2>数据库自增</h2>\\n<ul>\\n<li>todo Mybatis 主键生成</li>\\n</ul>\\n<p>问题：</p>\\n<ul>\\n<li>分库分表场景可能导致重复 ID</li>\\n</ul>\\n<h3>思路： 在唯一的表中统一管理主键</h3>\\n<p>一致性： 在唯一的表中统一管理主键</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"sql\\" data-title=\\"sql\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">BEGIN</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">REPLACE</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> INTO</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> test_order_id (stub) </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">VALUES</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'b'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">SELECT</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> LAST_INSERT_ID();</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">COMMIT</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{p as comp,o as data};
