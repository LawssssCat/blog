import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as l,o as r}from"./app-C0uzlWCK.js";const o={};function a(n,t){return r(),i("div",null,[...t[0]||(t[0]=[l('<p>以太坊（对外宣布的）初衷是搭建一个开源的、全球分布式的计算基础设施。</p><p>以太坊本质是一个基于交易的 “状态机”（transaction-based state machine）。</p><ul><li>“状态” —— 执行 “智能合约”（smart contract） 程序的结果，使用区块链来同步和存储系统状态</li><li>“交易” —— 使用名为 “以太币”（ether/ETH） 的加密货币来计量和约束执行资源成本</li></ul><p>以太坊平台使开发人员能够构建要给具有内置经济功能的去中心化应用程序（DApp）：在持续自我运行的同上，能减少/消除审计、第三方界面、交易对手风险。</p><p>以太坊组成部分：</p><ul><li><strong>P2P 网络</strong> —— DEVp2p 协议，端口 30303</li><li><strong>交易（Transaction）</strong> —— 网络消息，包括发送者（sender）、接收者（receiver）、值（value）、数据有效载荷（payload）</li><li><strong>以太坊虚拟机（EVM）</strong> —— 以太坊状态转换由以太坊虚拟机（EVM）处理，这是一个执行字节码的基于堆栈的虚拟机</li><li><strong>数据库（Blockchain）</strong> —— 以太坊的区块链作为数据库（通常是 Google 的 LevelDB）存储在每个节点上，包含序列化后的交易和系统状态</li><li><strong>客户端</strong> —— 比较有名的：Go-Ethereum（Geth）、Parity</li></ul><p>以太坊重要概念：</p><ul><li><strong>账户（Account）</strong> —— 包含地址、余额、随机数、以及可选的存储和代码的对象 <ul><li>普通账户（EOA）：存储和代码均为空</li><li>合约账户（Contract）：包含存储和代码</li></ul></li><li><strong>地址（Address）</strong> —— 代表一个 EOA/Contract，可以在区块链上接收/发送交易。（准确的说：地址是 ECDSA 公钥的 keccak 散列的最右边的 160 位）</li><li><strong>交易（Transaction）</strong><ul><li>发送以太币和信息</li><li>向合约发送的交易可以调用合约代码，并以信息数据为函数参数</li><li>向空用户发送信息，可以自动生成以信息作为代码块的合约账户</li></ul></li><li><strong>gas</strong> —— 以太坊用于执行智能合约的虚拟燃料。以太坊虚拟机使用核算机制来衡量 gas 的消耗量并限制计算资源的消耗</li></ul><p>以太坊 PoW（工作量证明） —— GHOST 幽灵协议</p><ul><li>挖矿奖励 <ul><li>区块奖励（Block rewards） —— 产生并马上合入新块后，给矿工的奖励。奖励：5/3/2/../0.5/...</li><li>叔块奖励（Uncle rewards） —— 产生但延时何如新快后，给矿工的奖励。奖励：7/8 的区块奖励（叔块 “Uncle” 在也称孤块 “orphan”）</li><li>叔块引用奖励（Uncle referencing rewards） —— 每引用一个叔块，给矿工的奖励。奖励：1/32 的区块奖励</li></ul></li></ul><p>以太坊 PoS（股权证明） —— Casper 精灵协议</p><p>以太坊原理</p><p>与比特币区别</p><p>客户端的使用</p><p>智能合约</p><p>Solidity</p><p>web3.js</p><p>综合运用各种工具</p><p>区块链（公链）发展简史：</p><ul><li>2008 区块链 1.0 —— 比特币：简单记账</li><li>2014 区块链 2.0 —— 以太坊：智能合约 —— 性能不行：出块时间慢（TPS 低）</li><li>2017 区块链 3.0 —— EOS/ArcBlock/IOTA：高性能、大吞吐量、开发者友好、用户友好 <ul><li>EOS 非去中性化</li><li>ArcBlock 云节点</li><li>IOTA 有向无环图</li></ul></li></ul><p>以太坊发展阶段：</p><ul><li><p>“前沿”（Frontier） <code>Block #0</code></p></li><li><p>“家园”（Homestead） <code>Block #1,150,000</code></p></li><li><p>“大都会”（Metropolis）</p><ul><li>阶段一： “拜占庭”（Byzantium） 2017 年 10 月推出，因为安全问题硬分叉出两个硬分叉（以太坊 ETH、以太坊经典 ETC），这是其中的一个</li></ul><blockquote><p><code>Block #1,192,000</code> “The DAO” 合约被攻击</p></blockquote><ul><li>阶段二： “君士坦丁堡”（Constantinople） 2018 年推出，预计包括切换到混合 POW/POS 共识算法</li></ul></li><li><p>“宁静”（Serenity）</p></li></ul><hr><p>常用工具：</p><ul><li>MetaMask - 浏览器插件钱包</li><li>Remix - 浏览器的 Solidity 在线编辑器</li><li>web3.js - 以太坊 javascript API 库</li><li>Teth - 以太坊客户端（go 语言）</li><li>Ganache - 以太坊客户端（测试环境私链）</li><li>Truffle - 以太坊开发框架</li></ul><p>参考：</p><ul><li>《精通以太坊》（Mastering Ethereum） <a href="https://github.com/ethereumbook/ethereumbook" target="_blank" rel="noopener noreferrer">https://github.com/ethereumbook/ethereumbook</a></li><li>《以太坊白皮书》（A Next-Generation Smart Contract and Decentralized Application Platform） <a href="https://github.com/ethereum/wiki/wiki/White-Paper" target="_blank" rel="noopener noreferrer">https://github.com/ethereum/wiki/wiki/White-Paper</a></li><li>《以太坊黄皮书》（《以太坊：一个安全去中心化的通用交易账本 拜占庭版本》）</li><li>以太坊官方文档（Ethereum Homestead Documentation） <a href="http://www.ethdocs.org/en/latest/index.html" target="_blank" rel="noopener noreferrer">http://www.ethdocs.org/en/latest/index.html</a></li><li>Solidity 官方文档 <a href="https://solidity.readthedocs.io/en/latest/" target="_blank" rel="noopener noreferrer">https://solidity.readthedocs.io/en/latest/</a></li></ul>',27)])])}const c=e(o,[["render",a]]),h=JSON.parse('{"path":"/zh/z-financial-blockchain/ethereum-introduction.html","title":"以太坊介绍","lang":"zh-CN","frontmatter":{"title":"以太坊介绍","date":"2024-05-09T00:00:00.000Z","tag":["ethereum"],"order":1,"description":"以太坊（对外宣布的）初衷是搭建一个开源的、全球分布式的计算基础设施。 以太坊本质是一个基于交易的 “状态机”（transaction-based state machine）。 “状态” —— 执行 “智能合约”（smart contract） 程序的结果，使用区块链来同步和存储系统状态 “交易” —— 使用名为 “以太币”（ether/ETH） 的加...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/z-financial-blockchain/ethereum-introduction.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"以太坊介绍"}],["meta",{"property":"og:description","content":"以太坊（对外宣布的）初衷是搭建一个开源的、全球分布式的计算基础设施。 以太坊本质是一个基于交易的 “状态机”（transaction-based state machine）。 “状态” —— 执行 “智能合约”（smart contract） 程序的结果，使用区块链来同步和存储系统状态 “交易” —— 使用名为 “以太币”（ether/ETH） 的加..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-15T22:53:16.000Z"}],["meta",{"property":"article:tag","content":"ethereum"}],["meta",{"property":"article:published_time","content":"2024-05-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-15T22:53:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"以太坊介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-15T22:53:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[],"git":{"createdTime":1734303196000,"updatedTime":1734303196000,"contributors":[{"name":"lawsssscat","username":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":1,"url":"https://github.com/lawsssscat"}]},"readingTime":{"minutes":3.4,"words":1021},"filePathRelative":"zh/z-financial-blockchain/ethereum-introduction.md","localizedDate":"2024年5月9日","excerpt":"<p>以太坊（对外宣布的）初衷是搭建一个开源的、全球分布式的计算基础设施。</p>\\n<p>以太坊本质是一个基于交易的 “状态机”（transaction-based state machine）。</p>\\n<ul>\\n<li>“状态” —— 执行 “智能合约”（smart contract） 程序的结果，使用区块链来同步和存储系统状态</li>\\n<li>“交易” —— 使用名为 “以太币”（ether/ETH） 的加密货币来计量和约束执行资源成本</li>\\n</ul>\\n<p>以太坊平台使开发人员能够构建要给具有内置经济功能的去中心化应用程序（DApp）：在持续自我运行的同上，能减少/消除审计、第三方界面、交易对手风险。</p>","autoDesc":true}');export{c as comp,h as data};
