import{_ as r,r as o,o as s,c,d as i,e as l,b as e,w as m,f as t}from"./app-Bz1lqDsY.js";const p={},d=i("p",null,"UML（Unified Modeling Language，统一建模语言）",-1),g=i("h2",{id:"标准",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#标准"},[i("span",null,"标准")])],-1),u=i("p",null,"标准：",-1),h={href:"https://www.omg.org/spec/UML/2.5.1/About-UML/",target:"_blank",rel:"noopener noreferrer"},w=i("li",null,[l("alias "),i("ul",null,[i("li",null,"UML 2.0"),i("li",null,"UML 2.x standard compliant")])],-1),b={href:"https://www.omg.org/certification/sysml/",target:"_blank",rel:"noopener noreferrer"},M=i("li",null,"sysml http://production.omgsysml.org/spec/",-1),f=t('<p>UML 图分类</p><ul><li>结构图（Structual Diagrams） <ul><li>类图（Class Diagram）</li><li>包图（Package Diagram）</li><li>组合结构图/复合结构图（Composite Structure Diagram）</li><li>对象图/实例图（Object Diagram）</li><li>组件图（Component Diagram）</li><li>部署图（Deployment Diagram）</li><li>剖面图（Profile Diagram）</li></ul></li><li>行为图（Behavioral Diagrams） <ul><li>活动图（Activity Diagram）</li><li>用例图（Use Case Diagram）</li><li>状态机图（State Machine Diagram）</li><li>交互图（Interaction Diagram） <ul><li>序列图/顺序图（Sequence Diagram）</li><li>时序图/时间图（Timing Diagram）</li><li>通信图（Communication Diagram）</li><li>交互概念图（Interactive Overview Diagram）</li></ul></li></ul></li></ul><h3 id="用例图-use-case-diagram" tabindex="-1"><a class="header-anchor" href="#用例图-use-case-diagram"><span>用例图（Use Case Diagram）</span></a></h3><p>概念</p><ul><li>用例 <ul><li>系统的一个特征，完成一个业务目标</li><li>区分需求的必要性、价值性、完整性</li></ul></li><li>参与者 <ul><li>在系统外部和系统交互的人/设备/系统</li></ul></li></ul><h3 id="活动图-activity-diagram-流程图-flowchart-diagram-bpmn" tabindex="-1"><a class="header-anchor" href="#活动图-activity-diagram-流程图-flowchart-diagram-bpmn"><span>活动图（Activity Diagram）/流程图（Flowchart Diagram）/BPMN</span></a></h3><p>参考：</p><ul><li>https://www.bilibili.com/video/BV1MY411c7BN/</li><li>https://sparxsystems.com/enterprise_architect_user_guide/17.0/modeling_languages/interruptibleactivityregion.html</li></ul><p>区别</p><ul><li>流程图 —— ASME（美国机械工程师学会） 提出，ISO 5807:1985</li><li>活动图 —— OMG 组织管理规范 ISO/IEC 19505-1:2012 <ul><li>活动图是流程图的扩展</li><li>活动图属于 UML， <strong>偏向架构设计</strong> （整个 UML 不止能描述业务流程，还能描述需求和用例等）</li></ul></li><li>BPMN（Business Process Modeling Notation，业务流程建模标记法） —— BPMI 机构管理（2005 年并入 OMG） <ul><li>BPMN 用于描述具体业务流程，有特定的使用场景： <strong>在开发工作流引擎时，一般用 BPMN 作为业务流程定义的输入</strong></li></ul></li></ul><p>概念</p><ul><li>泳道 —— 表示不同的活动主体（人），包含各种活动</li><li>动作</li><li>分叉/汇合 —— 并行/动作间没有必然先后顺序要求</li><li>事件 <ul><li>发送事件 —— 左尖</li><li>接收事件 —— 右尖</li><li>时间事件 —— 沙漏</li></ul></li><li>扩充区（Expansion Region）</li><li>结构化活动 —— 定义循环</li></ul><h3 id="类图-class-diagram" tabindex="-1"><a class="header-anchor" href="#类图-class-diagram"><span>类图（Class Diagram）</span></a></h3><p>参考：</p><ul><li>https://www.bilibili.com/video/BV1KL4y1F7go/</li><li>https://docs.staruml.io/working-with-uml-diagrams/class-diagram</li><li>https://www.cnblogs.com/coolstream/p/9572846.html</li></ul><p>用于描述类的内部结构以及与其他类的关系</p><p>类</p><ul><li>名称</li><li>属性/字段/成员变量 <code>[可见性][/]名称[:类型名][多重性][=默认值][{特性字符串}]</code></li><li>操作/行为/成员方法 <code>[可见性]名称([参数列表]):[返回值][{特性字符串}]</code></li></ul>',18),v={href:"https://docs.staruml.io/working-with-uml-diagrams/class-diagram#relationship",target:"_blank",rel:"noopener noreferrer"},_=t('<ul><li>association 关联关系，关系弱 <code>-----</code> e.g. 森林与老虎 —— 成员变量 <ul><li>关联类（association class） e.g. 人 —— 参与者（关联类） —— 会议</li></ul></li><li>aggregation 聚合关系，关系强 <code>----&lt;&gt;</code> e.g. 雁群与雁 —— 成员变量</li><li>composition 组合/复合/合成关系，关系最强 <code>----&lt;+&gt;</code> e.g. 人与头 —— 成员变量</li><li>dependency 依赖关系 <code>....&gt;</code> —— 形式变量、局部变量</li><li>generalization 泛化/继承 <code>....|&gt;</code> —— extends</li><li>realization 特化/实现 <code>----|&gt;</code> —— implements</li></ul><blockquote><p><strong>属性还是关系？</strong> 属性也能用 “关联”/“组合” 关系表示，用于突出被关系者的内部细节</p></blockquote><h3 id="对象图-object-diagram" tabindex="-1"><a class="header-anchor" href="#对象图-object-diagram"><span>对象图（Object Diagram）</span></a></h3><p>参考：</p><ul><li>https://docs.staruml.io/working-with-uml-diagrams/object-diagram</li><li>https://www.visual-paradigm.com/tw/guide/uml-unified-modeling-language/what-is-object-diagram/</li></ul><p>类图运行时的一个快照</p><h3 id="包图-package-diagram" tabindex="-1"><a class="header-anchor" href="#包图-package-diagram"><span>包图（Package Diagram）</span></a></h3><p>参考：</p><ul><li>https://docs.staruml.io/working-with-uml-diagrams/package-diagram</li><li>https://www.uml-diagrams.org/examples/java-servlet-30-api-package-diagram-example.html?context=pkg-examples</li></ul><p>宏观展示 “特性”/“领域” 间关系</p><h3 id="组合结构图-composite-structure-diagram" tabindex="-1"><a class="header-anchor" href="#组合结构图-composite-structure-diagram"><span>组合结构图（Composite Structure Diagram）</span></a></h3><p>参考：</p><ul><li>https://www.cnblogs.com/coolstream/p/9573438.html</li><li>https://docs.staruml.io/working-with-uml-diagrams/composite-structure-diagram</li><li>https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-composite-structure-diagram/</li><li>https://www.ibm.com/docs/zh/dmrt/9.5?topic=diagrams-composite-structure</li></ul><p>UML 2.0 新规，类图的扩展，描绘类内部属性的组合结构</p><p>与类图相似，复合结构图用于显示类与类之间的关系。 与类图不同，复合结构图可以显示类的内部结构和这个结构所实现的协作。</p><p>元素</p><ul><li>类 class —— 包含多个部件，每个部件视作其一个属性（attribute）</li><li>部件 part —— 类内部的属性/内部类</li><li>端口 port —— 对外暴露的接口</li><li>协作 collaboration —— 包含多个部件</li><li>collaboration use</li></ul><p>关系</p><ul><li>Connector</li><li>Role Binding Connector</li></ul><h3 id="组件图-component-diagram" tabindex="-1"><a class="header-anchor" href="#组件图-component-diagram"><span>组件图（Component Diagram）</span></a></h3><p>参考：</p><ul><li>https://www.bilibili.com/video/BV1BT4y167rd/</li><li>https://docs.staruml.io/v/v3/working-with-diagrams/component-diagram</li><li>https://www.uml-diagrams.org/component-diagrams.html</li><li>https://www.cnblogs.com/coolstream/p/9572868.html</li></ul><p>组件图显示组件、提供的和所需的接口、端口、 以及他们之间的关系。 这种类型的图表用于 <strong>基于组件的开发 （CBD, Component-Based Development）</strong> 描述具有 <strong>面向服务的体系结构 （SOA, Service-Oriented Architecture）</strong> 的系统。</p><blockquote><p>组件 vs 对象</p><p>组件和对象都是为了提高 “重用性” 和 “可替换性”。</p><ul><li>对象： 类、继承、多态。关注逻辑关系 —— 不同类是怎么关联起来的。</li><li>组件： 接口、服务、关注点分离。关注具体实现层面的关系 —— 不同接口怎么组装在一起。</li></ul></blockquote><p>UML 组件图的主要元素</p><ul><li>组件 —— 组件（Component）是定义了良好接口的、可重用的、可替代的物理实现单元，它一般表示实际存在的、物理的物件。程序源代码、可执行文件、子系统、一个脚本、动态链接库（DLL）、ActiveX 控件都可以成为系统中的组件。组件隐藏了内部实现的细节，仅通过接口提供服务。</li><li>接口 —— 组件中的接口主要分为两类：提供接口（Provided Interface）和需求接口（Required Interface）。</li><li>端口 —— 端口用于描述组件或类与它的环境、与其它类、与其它组件或内部部件的交互点。这个交互点一般是组件或类的一个属性，默认情况下，端口具有公共可见性。</li><li>连接器</li></ul><h3 id="部署图-deployment-diagram" tabindex="-1"><a class="header-anchor" href="#部署图-deployment-diagram"><span>部署图（Deployment Diagram）</span></a></h3><p>参考：</p><ul><li>https://docs.staruml.io/v/v3/working-with-diagrams/deployment-diagram</li><li>https://www.cnblogs.com/coolstream/p/9572870.html</li><li>https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-deployment-diagram/</li></ul><p>部署图也称配置图，用来显示系统中硬件和软件的<strong>物理架构</strong>。 从中可以了解到软件和硬件组件之间的物理拓扑、连接关系以及处理节点的分布情况。</p><p>部署图主要元素</p><ul><li>物件(Artifact)：UML 部署图中的物件时软件开发过程中的产物，包括需求文档、源代码、库文件、可执行程序、库文件、用户手册等。</li><li>节点(Node)： <ul><li>执行环境节点（executionEnvironment） —— 物件部署的目标位置。如硬件设备或运行在硬件设备上的软件系统。</li><li>设备节点（device） —— 不用于部署物件，但是参与节点间的通信</li></ul></li><li>连接(Association)：节点或物件之间的连线。见部署图主要关系部分</li></ul><p>部署图主要关系</p><ul><li>依赖：节点的物件之间存在相互调用的弱关系</li><li>关联：节点间的通信方式。跟具体的协议有关，比如 TCP/IP, ftp, http, soap, web service 等</li></ul><h3 id="_4-1-view-model" tabindex="-1"><a class="header-anchor" href="#_4-1-view-model"><span>4+1 View Model</span></a></h3><ul><li>Scenarios —— 用例图（Use Case Diagram）</li><li>Logical View —— 类图（Class Diagram）</li><li>Development View —— 组件图（Component Diagram）</li><li>Process View —— 组件图（Component Diagram）</li><li>Physical View —— 部署图（Deployment Diagram）</li></ul><h3 id="状态机图-state-machine-diagram" tabindex="-1"><a class="header-anchor" href="#状态机图-state-machine-diagram"><span>状态机图（State Machine Diagram）</span></a></h3><p>参考：</p><ul><li>https://www.bilibili.com/video/BV1YR4y1A7Mr/</li></ul><p>成员</p><ul><li>状态 <ul><li>初态/终态 —— 伪状态（不是真正的状态），用于表示状态转移的最初开始和最终结束方向 <ul><li>初态 —— 有且只有一个</li><li>终态 —— 0 ~ n 个</li></ul></li><li>简单状态</li><li>领域（Region） <ul><li>子状态</li></ul></li><li>历史状态 <ul><li>深历史 —— 记录所有深度子状态</li><li>浅历史 —— 记录当前深度子状态</li></ul></li></ul></li><li>状态转移 —— <code>源状态 --&gt; 触发事件 [监护条件] / 动作 --&gt; 目标状态</code></li><li>条件</li><li>并发</li></ul><h3 id="序列图-sequence-diagram" tabindex="-1"><a class="header-anchor" href="#序列图-sequence-diagram"><span>序列图（Sequence Diagram）</span></a></h3><p>参考：</p><ul><li>https://www.cnblogs.com/coolstream/p/9572860.html</li><li>https://docs.staruml.io/v/v3/working-with-diagrams/sequence-diagram</li></ul><p>时序图表示参与者与对象之间、对象与对象之间的动态交互过程及时序关系。</p><p>时序图详细而直观地展示了对象随时间变化的状态、调用关系和消息时序，时序图中的主要元素有：</p><ul><li><p>参与者/交互者(Actor) —— 参与系统的角色，可以是人、物或其它系统</p></li><li><p>门（Gate） —— 消息通过门进入或者离开交互或交互片段 | 用来定义一部分的交互</p></li><li><p>对象(Object)</p></li><li><p>生命线(Lifetime)</p></li><li><p>控制焦点(Focus of Control)</p></li><li><p>消息(Message)</p><ul><li>无触发消息/无接收消息 —— 不关心消息的发送者/接收者。一般用于起始/结束消息</li><li>同步消息</li><li>重入消息</li><li>异步消息</li></ul></li><li><p>激活(Activation)</p></li><li><p>约束(Constraint)</p></li><li><p>组合片段(Combined Fragments) —— 描述交互执行的条件与方式</p><ul><li>alt(Alternative) —— 备用多个片段：与 if...else...或 switch 对应</li><li>opt(Optional) —— 可选：可能发生也可能不发生的片段</li><li>par(Parallel) —— 并行：并行发生</li><li><code>loop [value]</code> —— 循环：与 for 或 foreach 对应，<code>[value]</code> 表示循环次数</li><li>region —— 关键区域：片段只能有一个线程一次执行它</li><li>neg —— 否定：片段显示无效的交互</li><li>ref —— 参考：指在另一个图上定义的交互。绘制框架以覆盖交互中涉及的生命线。可以定义参数和返回值。</li><li>sd —— 序列图：用于包围整个序列图</li></ul></li><li><p>连续（continuation）</p></li></ul><h3 id="通信图-communication-diagram" tabindex="-1"><a class="header-anchor" href="#通信图-communication-diagram"><span>通信图（Communication Diagram）</span></a></h3><p>顺序图 vs 通信图</p><ul><li>通信图和顺序图可以等价互换</li><li>通信图牺牲了顺序图上的直观性</li><li>通信图增强了布局和关联上的直观性</li></ul><h2 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h2>',51),y={href:"https://sparxsystems.com/",target:"_blank",rel:"noopener noreferrer"},D=i("li",null,"Rational Rose 2007 / Rational Rose 7.0 —— 完善，IBM 收费",-1),L=i("p",null,"other",-1),k=i("li",null,[i("p",null,"todo Astah | uml 画图工具，强大 but 收费")],-1),U={href:"https://sysmltools.com/reviews/cameo-systems-modeler-sysml/",target:"_blank",rel:"noopener noreferrer"},x=t('<h3 id="工具间导入导出" tabindex="-1"><a class="header-anchor" href="#工具间导入导出"><span>工具间导入导出</span></a></h3><p>不同工具绘制的 UML 图，可以通过 XMI 在系统间数据交换</p><p>XMI 是 OMG 组织定义的 UML 图表达格式</p><p>todo 格式分析</p><h2 id="信息源" tabindex="-1"><a class="header-anchor" href="#信息源"><span>信息源</span></a></h2><p>todo 软件工程</p><ul><li>todo https://www.bilibili.com/video/BV1o8411i7Pe/</li><li>todo https://www.bilibili.com/video/BV18y4y1h7e7/</li><li>todo https://www.bilibili.com/video/BV1r5411w7Ub/</li></ul><p>参考：</p>',8),C={href:"https://www.bilibili.com/video/BV1MY411c7BN/",target:"_blank",rel:"noopener noreferrer"},S=i("li",null,"todo https://www.uml-diagrams.org/class-diagrams-overview.html",-1),O=i("li",null,"todo https://docs.staruml.io/user-guide/basic-concepts",-1),B=i("li",null,"todo https://www.visual-paradigm.com/cn/guide/uml-unified-modeling-language/what-is-uml/",-1),P=i("li",null,"todo https://www.zhihu.com/people/OOThinking",-1);function A(V,j){const a=o("ExternalLinkIcon"),n=o("RouteLink");return s(),c("div",null,[d,g,u,i("ul",null,[i("li",null,[i("a",h,[l("OMG(Object Management Group，国际对象管理协会) UML(Unified Modeling Language) Specification"),e(a)]),i("ul",null,[w,i("li",null,[l("证书 "),i("ul",null,[i("li",null,[i("s",null,[i("a",b,[l("OCSMP(OMG Certified Systems Modeling Professional)"),e(a)])]),l(" 评估认证人员使用 SysML 进行系统建模能力的认证 （价格高到飞起 350 刀/次 至少考 4 次。且国内基本没用？猜的）")])])])])]),M]),f,i("p",null,[l("常用的关系 see "),i("a",v,[l("link"),e(a)])]),_,i("ul",null,[i("li",null,[i("a",y,[l("Enterprise Architect"),e(a)]),l(" —— 强大，收费 | todo https://space.bilibili.com/74123713/channel/series")]),D,i("li",null,[i("s",null,[e(n,{to:"/zh/dev-se-uml/staruml.html"},{default:m(()=>[l("StarUML")]),_:1}),l(" —— 小，免费")]),l(" （不好用）")])]),L,i("ul",null,[k,i("li",null,[i("p",null,[l("todo Cameo Systems Modeler | "),i("a",U,[l("https://sysmltools.com/reviews/cameo-systems-modeler-sysml/"),e(a)])])])]),x,i("ul",null,[i("li",null,[i("a",C,[l("UML 系列视频教程"),e(a)]),l(" （⭐⭐⭐⭐⭐）")]),S,O,B,P])])}const G=r(p,[["render",A],["__file","index.html.vue"]]),I=JSON.parse('{"path":"/zh/dev-se-uml/","title":"UML 使用","lang":"zh-CN","frontmatter":{"title":"UML 使用","date":"2024-09-19T00:00:00.000Z","order":1,"description":"UML（Unified Modeling Language，统一建模语言） 标准 标准： OMG(Object Management Group，国际对象管理协会) UML(Unified Modeling Language) Specification alias UML 2.0 UML 2.x standard compliant 证书 评估认证人...","head":[["meta",{"property":"og:url","content":"https://lawsssscat.github.io/blog/zh/blog/zh/dev-se-uml/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"UML 使用"}],["meta",{"property":"og:description","content":"UML（Unified Modeling Language，统一建模语言） 标准 标准： OMG(Object Management Group，国际对象管理协会) UML(Unified Modeling Language) Specification alias UML 2.0 UML 2.x standard compliant 证书 评估认证人..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-06T12:57:11.000Z"}],["meta",{"property":"article:author","content":"Steven"}],["meta",{"property":"article:published_time","content":"2024-09-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-06T12:57:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UML 使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-06T12:57:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Steven\\",\\"url\\":\\"https://github.com/LawssssCat/\\"}]}"]]},"headers":[{"level":2,"title":"标准","slug":"标准","link":"#标准","children":[{"level":3,"title":"用例图（Use Case Diagram）","slug":"用例图-use-case-diagram","link":"#用例图-use-case-diagram","children":[]},{"level":3,"title":"活动图（Activity Diagram）/流程图（Flowchart Diagram）/BPMN","slug":"活动图-activity-diagram-流程图-flowchart-diagram-bpmn","link":"#活动图-activity-diagram-流程图-flowchart-diagram-bpmn","children":[]},{"level":3,"title":"类图（Class Diagram）","slug":"类图-class-diagram","link":"#类图-class-diagram","children":[]},{"level":3,"title":"对象图（Object Diagram）","slug":"对象图-object-diagram","link":"#对象图-object-diagram","children":[]},{"level":3,"title":"包图（Package Diagram）","slug":"包图-package-diagram","link":"#包图-package-diagram","children":[]},{"level":3,"title":"组合结构图（Composite Structure Diagram）","slug":"组合结构图-composite-structure-diagram","link":"#组合结构图-composite-structure-diagram","children":[]},{"level":3,"title":"组件图（Component Diagram）","slug":"组件图-component-diagram","link":"#组件图-component-diagram","children":[]},{"level":3,"title":"部署图（Deployment Diagram）","slug":"部署图-deployment-diagram","link":"#部署图-deployment-diagram","children":[]},{"level":3,"title":"4+1 View Model","slug":"_4-1-view-model","link":"#_4-1-view-model","children":[]},{"level":3,"title":"状态机图（State Machine Diagram）","slug":"状态机图-state-machine-diagram","link":"#状态机图-state-machine-diagram","children":[]},{"level":3,"title":"序列图（Sequence Diagram）","slug":"序列图-sequence-diagram","link":"#序列图-sequence-diagram","children":[]},{"level":3,"title":"通信图（Communication Diagram）","slug":"通信图-communication-diagram","link":"#通信图-communication-diagram","children":[]}]},{"level":2,"title":"工具","slug":"工具","link":"#工具","children":[{"level":3,"title":"工具间导入导出","slug":"工具间导入导出","link":"#工具间导入导出","children":[]}]},{"level":2,"title":"信息源","slug":"信息源","link":"#信息源","children":[]}],"git":{"createdTime":1728219431000,"updatedTime":1728219431000,"contributors":[{"name":"lawsssscat","email":"18041500+LawssssCat@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":8,"words":2401},"filePathRelative":"zh/dev-se-uml/README.md","localizedDate":"2024年9月19日","excerpt":"<p>UML（Unified Modeling Language，统一建模语言）</p>\\n<h2>标准</h2>\\n<p>标准：</p>\\n<ul>\\n<li><a href=\\"https://www.omg.org/spec/UML/2.5.1/About-UML/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">OMG(Object Management Group，国际对象管理协会) UML(Unified Modeling Language) Specification</a>\\n<ul>\\n<li>alias\\n<ul>\\n<li>UML 2.0</li>\\n<li>UML 2.x standard compliant</li>\\n</ul>\\n</li>\\n<li>证书\\n<ul>\\n<li><s><a href=\\"https://www.omg.org/certification/sysml/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">OCSMP(OMG Certified Systems Modeling Professional)</a></s> 评估认证人员使用 SysML 进行系统建模能力的认证 （价格高到飞起 350 刀/次 至少考 4 次。且国内基本没用？猜的）</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>sysml http://production.omgsysml.org/spec/</li>\\n</ul>","autoDesc":true}');export{G as comp,I as data};
